Nonterminals useless in grammar

    STRING_NT
    LOCAL_DECLARATION_LIST


Terminals unused in grammar

    STR
    ELIF
    IC


Rules useless in grammar

   94 STRING_NT: STR


State 29 conflicts: 1 shift/reduce
State 120 conflicts: 2 shift/reduce
State 124 conflicts: 1 shift/reduce
State 161 conflicts: 1 shift/reduce
State 162 conflicts: 2 shift/reduce
State 163 conflicts: 2 shift/reduce
State 190 conflicts: 17 reduce/reduce
State 191 conflicts: 17 reduce/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: DECLARATION_LIST

    2 DECLARATION_LIST: DECLARATION_LIST DECLARATION
    3                 | DECLARATION

    4 DECLARATION: VARIABLE_DECLARATION
    5            | FUNCTION_DECLARATION

    6 VARIABLE_DECLARATION: VARIABLE_TYPE IDENTIFIER_NT SEMICOLON
    7                     | LIST_TYPE IDENTIFIER_NT OSB NON_N_NUMBER CSB SEMICOLON
    8                     | MATRIX_TYPE IDENTIFIER_NT OSB INTEGER_NT COMMA INTEGER_NT CSB SEMICOLON

    9 LIST_TYPE: LIST

   10 MATRIX_TYPE: MATRIX

   11 FUNCTION_DECLARATION: VARIABLE_TYPE FUNCTION_IDENTIFIER_NT ONB PARAMS CNB COMPOUND_STATEMENT

   12 PARAMS: PARAM_LIST_NT
   13       | %empty

   14 PARAM_LIST_NT: PARAM_LIST_NT COMMA PARAM
   15              | PARAM

   16 PARAM: VARIABLE_TYPE IDENTIFIER_NT
   17      | IDENTIFIER_NT

   18 STATEMENT_LIST: STATEMENT_LIST STATEMENT
   19               | STATEMENT

   20 STATEMENT: ASSIGNMENT_STATEMENT
   21          | COMPOUND_STATEMENT
   22          | IF_STATEMENT
   23          | WHILE_STATEMENT
   24          | FOR_STATEMENT
   25          | INCDEC_STATEMENT
   26          | LOCAL_DECLARATION
   27          | PRINT_STATEMENT
   28          | SCAN_STATEMENT
   29          | RETURN_STATEMENT

   30 RETURN_STATEMENT: RETURN IDENTIFIER_NT SEMICOLON
   31                 | RETURN INTEGER_NT SEMICOLON

   32 PRINT_STATEMENT: PRINT ONB PRINT_SCAN_ITEM CNB SEMICOLON

   33 SCAN_STATEMENT: SCAN ONB PRINT_SCAN_ITEM CNB SEMICOLON

   34 COMPOUND_STATEMENT: OFB STATEMENT_LIST CFB

   35 IF_STATEMENT: IF ONB EXPRESSION CNB STATEMENT
   36             | IF ONB EXPRESSION CNB STATEMENT ELSE STATEMENT

   37 WHILE_STATEMENT: WHILE ONB EXPRESSION CNB STATEMENT

   38 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON INCDEC_STATEMENT CNB STATEMENT

   39 INCDEC_STATEMENT: IDENTIFIER_NT INC SEMICOLON
   40                 | IDENTIFIER_NT DEC SEMICOLON

   41 VARIABLE_TYPE: INT
   42              | STRING
   43              | CHARACTER
   44              | FLOAT

   45 LOCAL_DECLARATION: VARIABLE_TYPE IDENTIFIER_NT SEMICOLON
   46                  | LIST_TYPE IDENTIFIER_NT OSB INTEGER_NT CSB SEMICOLON
   47                  | MATRIX_TYPE IDENTIFIER_NT OSB INTEGER_NT COMMA INTEGER_NT CSB SEMICOLON

   48 ASSIGNMENT_STATEMENT: IDENTIFIER_NT EQUALTO EXPRESSION SEMICOLON

   49 EXPRESSION: PEXPRESSION
   50           | PEXPRESSION PLUS PEXPRESSION
   51           | PEXPRESSION MINUS PEXPRESSION
   52           | PEXPRESSION MULTIPLY PEXPRESSION
   53           | PEXPRESSION DIVIDE PEXPRESSION
   54           | PEXPRESSION BAND PEXPRESSION
   55           | PEXPRESSION BXOR PEXPRESSION
   56           | PEXPRESSION BOR PEXPRESSION
   57           | PEXPRESSION GE PEXPRESSION
   58           | PEXPRESSION LE PEXPRESSION
   59           | PEXPRESSION GT PEXPRESSION
   60           | PEXPRESSION LT PEXPRESSION
   61           | PEXPRESSION EE PEXPRESSION
   62           | PEXPRESSION NEQ PEXPRESSION
   63           | SIZE_EXPRESSION
   64           | EXPRESSION AND EXPRESSION
   65           | EXPRESSION OR EXPRESSION
   66           | NOT EXPRESSION

   67 SIZE_EXPRESSION: ATSIZE IDENTIFIER_NT
   68                | AATSIZE IDENTIFIER_NT

   69 LIST_ELEMENT: LIST_ELEMENT INTEGER_NT SEMICOLON
   70             | INTEGER_NT SEMICOLON

   71 MATRIX_ELEMENT: MATRIX_ELEMENT MATVAR_NT SEMICOLON
   72               | MATVAR_NT SEMICOLON

   73 MATVAR_NT: MATVAR_NT COMMA INTEGER_NT
   74          | INTEGER_NT

   75 PEXPRESSION: FUNCTION_IDENTIFIER_NT ONB PARAMS CNB
   76            | INTEGER_NT
   77            | IDENTIFIER_NT
   78            | IDENTIFIER_NT OSB INTEGER_NT CSB
   79            | IDENTIFIER_NT OSB IDENTIFIER_NT CSB
   80            | ONB EXPRESSION CNB
   81            | OSB LIST_ELEMENT CSB
   82            | FLOAT_NT
   83            | OSB MATRIX_ELEMENT CSB
   84            | CHARACTER_NT

   85 PRINT_SCAN_ITEM: IDENTIFIER_NT

   86 INTEGER_NT: NON_N_NUMBER
   87           | N_NUMBER

   88 FLOAT_NT: FLOATING

   89 CHARACTER_NT: CHAR

   90 IDENTIFIER_NT: IDENTIFIER
   91              | IDENTIFIER_NT OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT OSB IDENTIFIER_NT CSB

   93 FUNCTION_IDENTIFIER_NT: FUNCTION_IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <node> (258) 41
    STRING <node> (259) 42
    CHARACTER <node> (260) 43
    FLOAT <node> (261) 44
    LIST <node> (262) 9
    MATRIX <node> (263) 10
    IDENTIFIER <node> (264) 90
    CHAR <node> (265) 89
    STR <node> (266)
    FUNCTION_IDENTIFIER <node> (267) 93
    N_NUMBER <node> (268) 87
    NON_N_NUMBER <node> (269) 7 86
    FLOATING <node> (270) 88
    COMMA <node> (271) 8 14 47 73
    SEMICOLON <node> (272) 6 7 8 30 31 32 33 38 39 40 45 46 47 48 69 70 71 72
    OFB <node> (273) 34
    CFB <node> (274) 34
    ONB <node> (275) 11 32 33 35 36 37 38 75 80
    CNB <node> (276) 11 32 33 35 36 37 38 75 80
    PLUS <node> (277) 50
    MINUS <node> (278) 51
    MULTIPLY <node> (279) 52
    DIVIDE <node> (280) 53
    IF <node> (281) 35 36
    ELSE <node> (282) 36
    ELIF <node> (283)
    WHILE <node> (284) 37
    FOR <node> (285) 38
    PRINT <node> (286) 32
    SCAN <node> (287) 33
    OR <node> (288) 65
    AND <node> (289) 64
    NOT <node> (290) 66
    EQUALTO <node> (291) 48
    LT <node> (292) 60
    GT <node> (293) 59
    LE <node> (294) 58
    GE <node> (295) 57
    EE <node> (296) 61
    NEQ <node> (297) 62
    INC <node> (298) 39
    DEC <node> (299) 40
    IC <node> (300)
    BAND <node> (301) 54
    BOR <node> (302) 56
    BXOR <node> (303) 55
    OSB <node> (304) 7 8 46 47 78 79 81 83 91 92
    CSB <node> (305) 7 8 46 47 78 79 81 83 91 92
    ATSIZE <node> (306) 67
    AATSIZE <node> (307) 68
    RETURN <node> (308) 30 31


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    PROGRAM <node> (55)
        on left: 1
        on right: 0
    DECLARATION_LIST <node> (56)
        on left: 2 3
        on right: 1 2
    DECLARATION <node> (57)
        on left: 4 5
        on right: 2 3
    VARIABLE_DECLARATION <node> (58)
        on left: 6 7 8
        on right: 4
    LIST_TYPE <node> (59)
        on left: 9
        on right: 7 46
    MATRIX_TYPE <node> (60)
        on left: 10
        on right: 8 47
    FUNCTION_DECLARATION <node> (61)
        on left: 11
        on right: 5
    PARAMS <node> (62)
        on left: 12 13
        on right: 11 75
    PARAM_LIST_NT <node> (63)
        on left: 14 15
        on right: 12 14
    PARAM <node> (64)
        on left: 16 17
        on right: 14 15
    STATEMENT_LIST <node> (65)
        on left: 18 19
        on right: 18 34
    STATEMENT <node> (66)
        on left: 20 21 22 23 24 25 26 27 28 29
        on right: 18 19 35 36 37 38
    RETURN_STATEMENT <node> (67)
        on left: 30 31
        on right: 29
    PRINT_STATEMENT <node> (68)
        on left: 32
        on right: 27
    SCAN_STATEMENT <node> (69)
        on left: 33
        on right: 28
    COMPOUND_STATEMENT <node> (70)
        on left: 34
        on right: 11 21
    IF_STATEMENT <node> (71)
        on left: 35 36
        on right: 22
    WHILE_STATEMENT <node> (72)
        on left: 37
        on right: 23
    FOR_STATEMENT <node> (73)
        on left: 38
        on right: 24
    INCDEC_STATEMENT <node> (74)
        on left: 39 40
        on right: 25 38
    VARIABLE_TYPE <node> (75)
        on left: 41 42 43 44
        on right: 6 11 16 45
    LOCAL_DECLARATION <node> (76)
        on left: 45 46 47
        on right: 26
    ASSIGNMENT_STATEMENT <node> (77)
        on left: 48
        on right: 20 38
    EXPRESSION <node> (78)
        on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
        on right: 35 36 37 38 48 64 65 66 80
    SIZE_EXPRESSION <node> (79)
        on left: 67 68
        on right: 63
    LIST_ELEMENT <node> (80)
        on left: 69 70
        on right: 69 81
    MATRIX_ELEMENT <node> (81)
        on left: 71 72
        on right: 71 83
    MATVAR_NT <node> (82)
        on left: 73 74
        on right: 71 72 73
    PEXPRESSION <node> (83)
        on left: 75 76 77 78 79 80 81 82 83 84
        on right: 49 50 51 52 53 54 55 56 57 58 59 60 61 62
    PRINT_SCAN_ITEM <node> (84)
        on left: 85
        on right: 32 33
    INTEGER_NT <node> (85)
        on left: 86 87
        on right: 8 31 46 47 69 70 73 74 76 78 91
    FLOAT_NT <node> (86)
        on left: 88
        on right: 82
    CHARACTER_NT <node> (87)
        on left: 89
        on right: 84
    IDENTIFIER_NT <node> (88)
        on left: 90 91 92
        on right: 6 7 8 16 17 30 39 40 45 46 47 48 67 68 77 78 79 85 91 92
    FUNCTION_IDENTIFIER_NT <node> (89)
        on left: 93
        on right: 11 75


State 0

    0 $accept: . PROGRAM $end

    INT        shift, and go to state 1
    STRING     shift, and go to state 2
    CHARACTER  shift, and go to state 3
    FLOAT      shift, and go to state 4
    LIST       shift, and go to state 5
    MATRIX     shift, and go to state 6

    PROGRAM               go to state 7
    DECLARATION_LIST      go to state 8
    DECLARATION           go to state 9
    VARIABLE_DECLARATION  go to state 10
    LIST_TYPE             go to state 11
    MATRIX_TYPE           go to state 12
    FUNCTION_DECLARATION  go to state 13
    VARIABLE_TYPE         go to state 14


State 1

   41 VARIABLE_TYPE: INT .

    $default  reduce using rule 41 (VARIABLE_TYPE)


State 2

   42 VARIABLE_TYPE: STRING .

    $default  reduce using rule 42 (VARIABLE_TYPE)


State 3

   43 VARIABLE_TYPE: CHARACTER .

    $default  reduce using rule 43 (VARIABLE_TYPE)


State 4

   44 VARIABLE_TYPE: FLOAT .

    $default  reduce using rule 44 (VARIABLE_TYPE)


State 5

    9 LIST_TYPE: LIST .

    $default  reduce using rule 9 (LIST_TYPE)


State 6

   10 MATRIX_TYPE: MATRIX .

    $default  reduce using rule 10 (MATRIX_TYPE)


State 7

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 15


State 8

    1 PROGRAM: DECLARATION_LIST .
    2 DECLARATION_LIST: DECLARATION_LIST . DECLARATION

    INT        shift, and go to state 1
    STRING     shift, and go to state 2
    CHARACTER  shift, and go to state 3
    FLOAT      shift, and go to state 4
    LIST       shift, and go to state 5
    MATRIX     shift, and go to state 6

    $default  reduce using rule 1 (PROGRAM)

    DECLARATION           go to state 16
    VARIABLE_DECLARATION  go to state 10
    LIST_TYPE             go to state 11
    MATRIX_TYPE           go to state 12
    FUNCTION_DECLARATION  go to state 13
    VARIABLE_TYPE         go to state 14


State 9

    3 DECLARATION_LIST: DECLARATION .

    $default  reduce using rule 3 (DECLARATION_LIST)


State 10

    4 DECLARATION: VARIABLE_DECLARATION .

    $default  reduce using rule 4 (DECLARATION)


State 11

    7 VARIABLE_DECLARATION: LIST_TYPE . IDENTIFIER_NT OSB NON_N_NUMBER CSB SEMICOLON

    IDENTIFIER  shift, and go to state 17

    IDENTIFIER_NT  go to state 18


State 12

    8 VARIABLE_DECLARATION: MATRIX_TYPE . IDENTIFIER_NT OSB INTEGER_NT COMMA INTEGER_NT CSB SEMICOLON

    IDENTIFIER  shift, and go to state 17

    IDENTIFIER_NT  go to state 19


State 13

    5 DECLARATION: FUNCTION_DECLARATION .

    $default  reduce using rule 5 (DECLARATION)


State 14

    6 VARIABLE_DECLARATION: VARIABLE_TYPE . IDENTIFIER_NT SEMICOLON
   11 FUNCTION_DECLARATION: VARIABLE_TYPE . FUNCTION_IDENTIFIER_NT ONB PARAMS CNB COMPOUND_STATEMENT

    IDENTIFIER           shift, and go to state 17
    FUNCTION_IDENTIFIER  shift, and go to state 20

    IDENTIFIER_NT           go to state 21
    FUNCTION_IDENTIFIER_NT  go to state 22


State 15

    0 $accept: PROGRAM $end .

    $default  accept


State 16

    2 DECLARATION_LIST: DECLARATION_LIST DECLARATION .

    $default  reduce using rule 2 (DECLARATION_LIST)


State 17

   90 IDENTIFIER_NT: IDENTIFIER .

    $default  reduce using rule 90 (IDENTIFIER_NT)


State 18

    7 VARIABLE_DECLARATION: LIST_TYPE IDENTIFIER_NT . OSB NON_N_NUMBER CSB SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    OSB  shift, and go to state 23


State 19

    8 VARIABLE_DECLARATION: MATRIX_TYPE IDENTIFIER_NT . OSB INTEGER_NT COMMA INTEGER_NT CSB SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    OSB  shift, and go to state 24


State 20

   93 FUNCTION_IDENTIFIER_NT: FUNCTION_IDENTIFIER .

    $default  reduce using rule 93 (FUNCTION_IDENTIFIER_NT)


State 21

    6 VARIABLE_DECLARATION: VARIABLE_TYPE IDENTIFIER_NT . SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    SEMICOLON  shift, and go to state 25
    OSB        shift, and go to state 26


State 22

   11 FUNCTION_DECLARATION: VARIABLE_TYPE FUNCTION_IDENTIFIER_NT . ONB PARAMS CNB COMPOUND_STATEMENT

    ONB  shift, and go to state 27


State 23

    7 VARIABLE_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB . NON_N_NUMBER CSB SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT OSB . INTEGER_NT CSB
   92              | IDENTIFIER_NT OSB . IDENTIFIER_NT CSB

    IDENTIFIER    shift, and go to state 17
    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 29

    INTEGER_NT     go to state 30
    IDENTIFIER_NT  go to state 31


State 24

    8 VARIABLE_DECLARATION: MATRIX_TYPE IDENTIFIER_NT OSB . INTEGER_NT COMMA INTEGER_NT CSB SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT OSB . INTEGER_NT CSB
   92              | IDENTIFIER_NT OSB . IDENTIFIER_NT CSB

    IDENTIFIER    shift, and go to state 17
    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 32

    INTEGER_NT     go to state 33
    IDENTIFIER_NT  go to state 31


State 25

    6 VARIABLE_DECLARATION: VARIABLE_TYPE IDENTIFIER_NT SEMICOLON .

    $default  reduce using rule 6 (VARIABLE_DECLARATION)


State 26

   91 IDENTIFIER_NT: IDENTIFIER_NT OSB . INTEGER_NT CSB
   92              | IDENTIFIER_NT OSB . IDENTIFIER_NT CSB

    IDENTIFIER    shift, and go to state 17
    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 32

    INTEGER_NT     go to state 30
    IDENTIFIER_NT  go to state 31


State 27

   11 FUNCTION_DECLARATION: VARIABLE_TYPE FUNCTION_IDENTIFIER_NT ONB . PARAMS CNB COMPOUND_STATEMENT

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    IDENTIFIER  shift, and go to state 17

    $default  reduce using rule 13 (PARAMS)

    PARAMS         go to state 34
    PARAM_LIST_NT  go to state 35
    PARAM          go to state 36
    VARIABLE_TYPE  go to state 37
    IDENTIFIER_NT  go to state 38


State 28

   87 INTEGER_NT: N_NUMBER .

    $default  reduce using rule 87 (INTEGER_NT)


State 29

    7 VARIABLE_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB NON_N_NUMBER . CSB SEMICOLON
   86 INTEGER_NT: NON_N_NUMBER .

    CSB  shift, and go to state 39

    CSB  [reduce using rule 86 (INTEGER_NT)]


State 30

   91 IDENTIFIER_NT: IDENTIFIER_NT OSB INTEGER_NT . CSB

    CSB  shift, and go to state 40


State 31

   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB
   92              | IDENTIFIER_NT OSB IDENTIFIER_NT . CSB

    OSB  shift, and go to state 26
    CSB  shift, and go to state 41


State 32

   86 INTEGER_NT: NON_N_NUMBER .

    $default  reduce using rule 86 (INTEGER_NT)


State 33

    8 VARIABLE_DECLARATION: MATRIX_TYPE IDENTIFIER_NT OSB INTEGER_NT . COMMA INTEGER_NT CSB SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT OSB INTEGER_NT . CSB

    COMMA  shift, and go to state 42
    CSB    shift, and go to state 40


State 34

   11 FUNCTION_DECLARATION: VARIABLE_TYPE FUNCTION_IDENTIFIER_NT ONB PARAMS . CNB COMPOUND_STATEMENT

    CNB  shift, and go to state 43


State 35

   12 PARAMS: PARAM_LIST_NT .
   14 PARAM_LIST_NT: PARAM_LIST_NT . COMMA PARAM

    COMMA  shift, and go to state 44

    $default  reduce using rule 12 (PARAMS)


State 36

   15 PARAM_LIST_NT: PARAM .

    $default  reduce using rule 15 (PARAM_LIST_NT)


State 37

   16 PARAM: VARIABLE_TYPE . IDENTIFIER_NT

    IDENTIFIER  shift, and go to state 17

    IDENTIFIER_NT  go to state 45


State 38

   17 PARAM: IDENTIFIER_NT .
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    OSB  shift, and go to state 26

    $default  reduce using rule 17 (PARAM)


State 39

    7 VARIABLE_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB NON_N_NUMBER CSB . SEMICOLON

    SEMICOLON  shift, and go to state 46


State 40

   91 IDENTIFIER_NT: IDENTIFIER_NT OSB INTEGER_NT CSB .

    $default  reduce using rule 91 (IDENTIFIER_NT)


State 41

   92 IDENTIFIER_NT: IDENTIFIER_NT OSB IDENTIFIER_NT CSB .

    $default  reduce using rule 92 (IDENTIFIER_NT)


State 42

    8 VARIABLE_DECLARATION: MATRIX_TYPE IDENTIFIER_NT OSB INTEGER_NT COMMA . INTEGER_NT CSB SEMICOLON

    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 32

    INTEGER_NT  go to state 47


State 43

   11 FUNCTION_DECLARATION: VARIABLE_TYPE FUNCTION_IDENTIFIER_NT ONB PARAMS CNB . COMPOUND_STATEMENT

    OFB  shift, and go to state 48

    COMPOUND_STATEMENT  go to state 49


State 44

   14 PARAM_LIST_NT: PARAM_LIST_NT COMMA . PARAM

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    IDENTIFIER  shift, and go to state 17

    PARAM          go to state 50
    VARIABLE_TYPE  go to state 37
    IDENTIFIER_NT  go to state 38


State 45

   16 PARAM: VARIABLE_TYPE IDENTIFIER_NT .
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    OSB  shift, and go to state 26

    $default  reduce using rule 16 (PARAM)


State 46

    7 VARIABLE_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB NON_N_NUMBER CSB SEMICOLON .

    $default  reduce using rule 7 (VARIABLE_DECLARATION)


State 47

    8 VARIABLE_DECLARATION: MATRIX_TYPE IDENTIFIER_NT OSB INTEGER_NT COMMA INTEGER_NT . CSB SEMICOLON

    CSB  shift, and go to state 51


State 48

   34 COMPOUND_STATEMENT: OFB . STATEMENT_LIST CFB

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    LIST        shift, and go to state 5
    MATRIX      shift, and go to state 6
    IDENTIFIER  shift, and go to state 17
    OFB         shift, and go to state 48
    IF          shift, and go to state 52
    WHILE       shift, and go to state 53
    FOR         shift, and go to state 54
    PRINT       shift, and go to state 55
    SCAN        shift, and go to state 56
    RETURN      shift, and go to state 57

    LIST_TYPE             go to state 58
    MATRIX_TYPE           go to state 59
    STATEMENT_LIST        go to state 60
    STATEMENT             go to state 61
    RETURN_STATEMENT      go to state 62
    PRINT_STATEMENT       go to state 63
    SCAN_STATEMENT        go to state 64
    COMPOUND_STATEMENT    go to state 65
    IF_STATEMENT          go to state 66
    WHILE_STATEMENT       go to state 67
    FOR_STATEMENT         go to state 68
    INCDEC_STATEMENT      go to state 69
    VARIABLE_TYPE         go to state 70
    LOCAL_DECLARATION     go to state 71
    ASSIGNMENT_STATEMENT  go to state 72
    IDENTIFIER_NT         go to state 73


State 49

   11 FUNCTION_DECLARATION: VARIABLE_TYPE FUNCTION_IDENTIFIER_NT ONB PARAMS CNB COMPOUND_STATEMENT .

    $default  reduce using rule 11 (FUNCTION_DECLARATION)


State 50

   14 PARAM_LIST_NT: PARAM_LIST_NT COMMA PARAM .

    $default  reduce using rule 14 (PARAM_LIST_NT)


State 51

    8 VARIABLE_DECLARATION: MATRIX_TYPE IDENTIFIER_NT OSB INTEGER_NT COMMA INTEGER_NT CSB . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 52

   35 IF_STATEMENT: IF . ONB EXPRESSION CNB STATEMENT
   36             | IF . ONB EXPRESSION CNB STATEMENT ELSE STATEMENT

    ONB  shift, and go to state 75


State 53

   37 WHILE_STATEMENT: WHILE . ONB EXPRESSION CNB STATEMENT

    ONB  shift, and go to state 76


State 54

   38 FOR_STATEMENT: FOR . ONB ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON INCDEC_STATEMENT CNB STATEMENT

    ONB  shift, and go to state 77


State 55

   32 PRINT_STATEMENT: PRINT . ONB PRINT_SCAN_ITEM CNB SEMICOLON

    ONB  shift, and go to state 78


State 56

   33 SCAN_STATEMENT: SCAN . ONB PRINT_SCAN_ITEM CNB SEMICOLON

    ONB  shift, and go to state 79


State 57

   30 RETURN_STATEMENT: RETURN . IDENTIFIER_NT SEMICOLON
   31                 | RETURN . INTEGER_NT SEMICOLON

    IDENTIFIER    shift, and go to state 17
    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 32

    INTEGER_NT     go to state 80
    IDENTIFIER_NT  go to state 81


State 58

   46 LOCAL_DECLARATION: LIST_TYPE . IDENTIFIER_NT OSB INTEGER_NT CSB SEMICOLON

    IDENTIFIER  shift, and go to state 17

    IDENTIFIER_NT  go to state 82


State 59

   47 LOCAL_DECLARATION: MATRIX_TYPE . IDENTIFIER_NT OSB INTEGER_NT COMMA INTEGER_NT CSB SEMICOLON

    IDENTIFIER  shift, and go to state 17

    IDENTIFIER_NT  go to state 83


State 60

   18 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   34 COMPOUND_STATEMENT: OFB STATEMENT_LIST . CFB

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    LIST        shift, and go to state 5
    MATRIX      shift, and go to state 6
    IDENTIFIER  shift, and go to state 17
    OFB         shift, and go to state 48
    CFB         shift, and go to state 84
    IF          shift, and go to state 52
    WHILE       shift, and go to state 53
    FOR         shift, and go to state 54
    PRINT       shift, and go to state 55
    SCAN        shift, and go to state 56
    RETURN      shift, and go to state 57

    LIST_TYPE             go to state 58
    MATRIX_TYPE           go to state 59
    STATEMENT             go to state 85
    RETURN_STATEMENT      go to state 62
    PRINT_STATEMENT       go to state 63
    SCAN_STATEMENT        go to state 64
    COMPOUND_STATEMENT    go to state 65
    IF_STATEMENT          go to state 66
    WHILE_STATEMENT       go to state 67
    FOR_STATEMENT         go to state 68
    INCDEC_STATEMENT      go to state 69
    VARIABLE_TYPE         go to state 70
    LOCAL_DECLARATION     go to state 71
    ASSIGNMENT_STATEMENT  go to state 72
    IDENTIFIER_NT         go to state 73


State 61

   19 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 19 (STATEMENT_LIST)


State 62

   29 STATEMENT: RETURN_STATEMENT .

    $default  reduce using rule 29 (STATEMENT)


State 63

   27 STATEMENT: PRINT_STATEMENT .

    $default  reduce using rule 27 (STATEMENT)


State 64

   28 STATEMENT: SCAN_STATEMENT .

    $default  reduce using rule 28 (STATEMENT)


State 65

   21 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 21 (STATEMENT)


State 66

   22 STATEMENT: IF_STATEMENT .

    $default  reduce using rule 22 (STATEMENT)


State 67

   23 STATEMENT: WHILE_STATEMENT .

    $default  reduce using rule 23 (STATEMENT)


State 68

   24 STATEMENT: FOR_STATEMENT .

    $default  reduce using rule 24 (STATEMENT)


State 69

   25 STATEMENT: INCDEC_STATEMENT .

    $default  reduce using rule 25 (STATEMENT)


State 70

   45 LOCAL_DECLARATION: VARIABLE_TYPE . IDENTIFIER_NT SEMICOLON

    IDENTIFIER  shift, and go to state 17

    IDENTIFIER_NT  go to state 86


State 71

   26 STATEMENT: LOCAL_DECLARATION .

    $default  reduce using rule 26 (STATEMENT)


State 72

   20 STATEMENT: ASSIGNMENT_STATEMENT .

    $default  reduce using rule 20 (STATEMENT)


State 73

   39 INCDEC_STATEMENT: IDENTIFIER_NT . INC SEMICOLON
   40                 | IDENTIFIER_NT . DEC SEMICOLON
   48 ASSIGNMENT_STATEMENT: IDENTIFIER_NT . EQUALTO EXPRESSION SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    EQUALTO  shift, and go to state 87
    INC      shift, and go to state 88
    DEC      shift, and go to state 89
    OSB      shift, and go to state 26


State 74

    8 VARIABLE_DECLARATION: MATRIX_TYPE IDENTIFIER_NT OSB INTEGER_NT COMMA INTEGER_NT CSB SEMICOLON .

    $default  reduce using rule 8 (VARIABLE_DECLARATION)


State 75

   35 IF_STATEMENT: IF ONB . EXPRESSION CNB STATEMENT
   36             | IF ONB . EXPRESSION CNB STATEMENT ELSE STATEMENT

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    NOT                  shift, and go to state 93
    OSB                  shift, and go to state 94
    ATSIZE               shift, and go to state 95
    AATSIZE              shift, and go to state 96

    EXPRESSION              go to state 97
    SIZE_EXPRESSION         go to state 98
    PEXPRESSION             go to state 99
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 76

   37 WHILE_STATEMENT: WHILE ONB . EXPRESSION CNB STATEMENT

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    NOT                  shift, and go to state 93
    OSB                  shift, and go to state 94
    ATSIZE               shift, and go to state 95
    AATSIZE              shift, and go to state 96

    EXPRESSION              go to state 105
    SIZE_EXPRESSION         go to state 98
    PEXPRESSION             go to state 99
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 77

   38 FOR_STATEMENT: FOR ONB . ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON INCDEC_STATEMENT CNB STATEMENT

    IDENTIFIER  shift, and go to state 17

    ASSIGNMENT_STATEMENT  go to state 106
    IDENTIFIER_NT         go to state 107


State 78

   32 PRINT_STATEMENT: PRINT ONB . PRINT_SCAN_ITEM CNB SEMICOLON

    IDENTIFIER  shift, and go to state 17

    PRINT_SCAN_ITEM  go to state 108
    IDENTIFIER_NT    go to state 109


State 79

   33 SCAN_STATEMENT: SCAN ONB . PRINT_SCAN_ITEM CNB SEMICOLON

    IDENTIFIER  shift, and go to state 17

    PRINT_SCAN_ITEM  go to state 110
    IDENTIFIER_NT    go to state 109


State 80

   31 RETURN_STATEMENT: RETURN INTEGER_NT . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 81

   30 RETURN_STATEMENT: RETURN IDENTIFIER_NT . SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    SEMICOLON  shift, and go to state 112
    OSB        shift, and go to state 26


State 82

   46 LOCAL_DECLARATION: LIST_TYPE IDENTIFIER_NT . OSB INTEGER_NT CSB SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    OSB  shift, and go to state 113


State 83

   47 LOCAL_DECLARATION: MATRIX_TYPE IDENTIFIER_NT . OSB INTEGER_NT COMMA INTEGER_NT CSB SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    OSB  shift, and go to state 114


State 84

   34 COMPOUND_STATEMENT: OFB STATEMENT_LIST CFB .

    $default  reduce using rule 34 (COMPOUND_STATEMENT)


State 85

   18 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 18 (STATEMENT_LIST)


State 86

   45 LOCAL_DECLARATION: VARIABLE_TYPE IDENTIFIER_NT . SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    SEMICOLON  shift, and go to state 115
    OSB        shift, and go to state 26


State 87

   48 ASSIGNMENT_STATEMENT: IDENTIFIER_NT EQUALTO . EXPRESSION SEMICOLON

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    NOT                  shift, and go to state 93
    OSB                  shift, and go to state 94
    ATSIZE               shift, and go to state 95
    AATSIZE              shift, and go to state 96

    EXPRESSION              go to state 116
    SIZE_EXPRESSION         go to state 98
    PEXPRESSION             go to state 99
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 88

   39 INCDEC_STATEMENT: IDENTIFIER_NT INC . SEMICOLON

    SEMICOLON  shift, and go to state 117


State 89

   40 INCDEC_STATEMENT: IDENTIFIER_NT DEC . SEMICOLON

    SEMICOLON  shift, and go to state 118


State 90

   89 CHARACTER_NT: CHAR .

    $default  reduce using rule 89 (CHARACTER_NT)


State 91

   88 FLOAT_NT: FLOATING .

    $default  reduce using rule 88 (FLOAT_NT)


State 92

   80 PEXPRESSION: ONB . EXPRESSION CNB

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    NOT                  shift, and go to state 93
    OSB                  shift, and go to state 94
    ATSIZE               shift, and go to state 95
    AATSIZE              shift, and go to state 96

    EXPRESSION              go to state 119
    SIZE_EXPRESSION         go to state 98
    PEXPRESSION             go to state 99
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 93

   66 EXPRESSION: NOT . EXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    NOT                  shift, and go to state 93
    OSB                  shift, and go to state 94
    ATSIZE               shift, and go to state 95
    AATSIZE              shift, and go to state 96

    EXPRESSION              go to state 120
    SIZE_EXPRESSION         go to state 98
    PEXPRESSION             go to state 99
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 94

   81 PEXPRESSION: OSB . LIST_ELEMENT CSB
   83            | OSB . MATRIX_ELEMENT CSB

    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 32

    LIST_ELEMENT    go to state 121
    MATRIX_ELEMENT  go to state 122
    MATVAR_NT       go to state 123
    INTEGER_NT      go to state 124


State 95

   67 SIZE_EXPRESSION: ATSIZE . IDENTIFIER_NT

    IDENTIFIER  shift, and go to state 17

    IDENTIFIER_NT  go to state 125


State 96

   68 SIZE_EXPRESSION: AATSIZE . IDENTIFIER_NT

    IDENTIFIER  shift, and go to state 17

    IDENTIFIER_NT  go to state 126


State 97

   35 IF_STATEMENT: IF ONB EXPRESSION . CNB STATEMENT
   36             | IF ONB EXPRESSION . CNB STATEMENT ELSE STATEMENT
   64 EXPRESSION: EXPRESSION . AND EXPRESSION
   65           | EXPRESSION . OR EXPRESSION

    CNB  shift, and go to state 127
    OR   shift, and go to state 128
    AND  shift, and go to state 129


State 98

   63 EXPRESSION: SIZE_EXPRESSION .

    $default  reduce using rule 63 (EXPRESSION)


State 99

   49 EXPRESSION: PEXPRESSION .
   50           | PEXPRESSION . PLUS PEXPRESSION
   51           | PEXPRESSION . MINUS PEXPRESSION
   52           | PEXPRESSION . MULTIPLY PEXPRESSION
   53           | PEXPRESSION . DIVIDE PEXPRESSION
   54           | PEXPRESSION . BAND PEXPRESSION
   55           | PEXPRESSION . BXOR PEXPRESSION
   56           | PEXPRESSION . BOR PEXPRESSION
   57           | PEXPRESSION . GE PEXPRESSION
   58           | PEXPRESSION . LE PEXPRESSION
   59           | PEXPRESSION . GT PEXPRESSION
   60           | PEXPRESSION . LT PEXPRESSION
   61           | PEXPRESSION . EE PEXPRESSION
   62           | PEXPRESSION . NEQ PEXPRESSION

    PLUS      shift, and go to state 130
    MINUS     shift, and go to state 131
    MULTIPLY  shift, and go to state 132
    DIVIDE    shift, and go to state 133
    LT        shift, and go to state 134
    GT        shift, and go to state 135
    LE        shift, and go to state 136
    GE        shift, and go to state 137
    EE        shift, and go to state 138
    NEQ       shift, and go to state 139
    BAND      shift, and go to state 140
    BOR       shift, and go to state 141
    BXOR      shift, and go to state 142

    $default  reduce using rule 49 (EXPRESSION)


State 100

   76 PEXPRESSION: INTEGER_NT .

    $default  reduce using rule 76 (PEXPRESSION)


State 101

   82 PEXPRESSION: FLOAT_NT .

    $default  reduce using rule 82 (PEXPRESSION)


State 102

   84 PEXPRESSION: CHARACTER_NT .

    $default  reduce using rule 84 (PEXPRESSION)


State 103

   77 PEXPRESSION: IDENTIFIER_NT .
   78            | IDENTIFIER_NT . OSB INTEGER_NT CSB
   79            | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    OSB  shift, and go to state 143

    $default  reduce using rule 77 (PEXPRESSION)


State 104

   75 PEXPRESSION: FUNCTION_IDENTIFIER_NT . ONB PARAMS CNB

    ONB  shift, and go to state 144


State 105

   37 WHILE_STATEMENT: WHILE ONB EXPRESSION . CNB STATEMENT
   64 EXPRESSION: EXPRESSION . AND EXPRESSION
   65           | EXPRESSION . OR EXPRESSION

    CNB  shift, and go to state 145
    OR   shift, and go to state 128
    AND  shift, and go to state 129


State 106

   38 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT . EXPRESSION SEMICOLON INCDEC_STATEMENT CNB STATEMENT

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    NOT                  shift, and go to state 93
    OSB                  shift, and go to state 94
    ATSIZE               shift, and go to state 95
    AATSIZE              shift, and go to state 96

    EXPRESSION              go to state 146
    SIZE_EXPRESSION         go to state 98
    PEXPRESSION             go to state 99
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 107

   48 ASSIGNMENT_STATEMENT: IDENTIFIER_NT . EQUALTO EXPRESSION SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    EQUALTO  shift, and go to state 87
    OSB      shift, and go to state 26


State 108

   32 PRINT_STATEMENT: PRINT ONB PRINT_SCAN_ITEM . CNB SEMICOLON

    CNB  shift, and go to state 147


State 109

   85 PRINT_SCAN_ITEM: IDENTIFIER_NT .
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    OSB  shift, and go to state 26

    $default  reduce using rule 85 (PRINT_SCAN_ITEM)


State 110

   33 SCAN_STATEMENT: SCAN ONB PRINT_SCAN_ITEM . CNB SEMICOLON

    CNB  shift, and go to state 148


State 111

   31 RETURN_STATEMENT: RETURN INTEGER_NT SEMICOLON .

    $default  reduce using rule 31 (RETURN_STATEMENT)


State 112

   30 RETURN_STATEMENT: RETURN IDENTIFIER_NT SEMICOLON .

    $default  reduce using rule 30 (RETURN_STATEMENT)


State 113

   46 LOCAL_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB . INTEGER_NT CSB SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT OSB . INTEGER_NT CSB
   92              | IDENTIFIER_NT OSB . IDENTIFIER_NT CSB

    IDENTIFIER    shift, and go to state 17
    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 32

    INTEGER_NT     go to state 149
    IDENTIFIER_NT  go to state 31


State 114

   47 LOCAL_DECLARATION: MATRIX_TYPE IDENTIFIER_NT OSB . INTEGER_NT COMMA INTEGER_NT CSB SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT OSB . INTEGER_NT CSB
   92              | IDENTIFIER_NT OSB . IDENTIFIER_NT CSB

    IDENTIFIER    shift, and go to state 17
    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 32

    INTEGER_NT     go to state 150
    IDENTIFIER_NT  go to state 31


State 115

   45 LOCAL_DECLARATION: VARIABLE_TYPE IDENTIFIER_NT SEMICOLON .

    $default  reduce using rule 45 (LOCAL_DECLARATION)


State 116

   48 ASSIGNMENT_STATEMENT: IDENTIFIER_NT EQUALTO EXPRESSION . SEMICOLON
   64 EXPRESSION: EXPRESSION . AND EXPRESSION
   65           | EXPRESSION . OR EXPRESSION

    SEMICOLON  shift, and go to state 151
    OR         shift, and go to state 128
    AND        shift, and go to state 129


State 117

   39 INCDEC_STATEMENT: IDENTIFIER_NT INC SEMICOLON .

    $default  reduce using rule 39 (INCDEC_STATEMENT)


State 118

   40 INCDEC_STATEMENT: IDENTIFIER_NT DEC SEMICOLON .

    $default  reduce using rule 40 (INCDEC_STATEMENT)


State 119

   64 EXPRESSION: EXPRESSION . AND EXPRESSION
   65           | EXPRESSION . OR EXPRESSION
   80 PEXPRESSION: ONB EXPRESSION . CNB

    CNB  shift, and go to state 152
    OR   shift, and go to state 128
    AND  shift, and go to state 129


State 120

   64 EXPRESSION: EXPRESSION . AND EXPRESSION
   65           | EXPRESSION . OR EXPRESSION
   66           | NOT EXPRESSION .

    OR   shift, and go to state 128
    AND  shift, and go to state 129

    OR        [reduce using rule 66 (EXPRESSION)]
    AND       [reduce using rule 66 (EXPRESSION)]
    $default  reduce using rule 66 (EXPRESSION)


State 121

   69 LIST_ELEMENT: LIST_ELEMENT . INTEGER_NT SEMICOLON
   81 PEXPRESSION: OSB LIST_ELEMENT . CSB

    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 32
    CSB           shift, and go to state 153

    INTEGER_NT  go to state 154


State 122

   71 MATRIX_ELEMENT: MATRIX_ELEMENT . MATVAR_NT SEMICOLON
   83 PEXPRESSION: OSB MATRIX_ELEMENT . CSB

    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 32
    CSB           shift, and go to state 155

    MATVAR_NT   go to state 156
    INTEGER_NT  go to state 157


State 123

   72 MATRIX_ELEMENT: MATVAR_NT . SEMICOLON
   73 MATVAR_NT: MATVAR_NT . COMMA INTEGER_NT

    COMMA      shift, and go to state 158
    SEMICOLON  shift, and go to state 159


State 124

   70 LIST_ELEMENT: INTEGER_NT . SEMICOLON
   74 MATVAR_NT: INTEGER_NT .

    SEMICOLON  shift, and go to state 160

    SEMICOLON  [reduce using rule 74 (MATVAR_NT)]
    $default   reduce using rule 74 (MATVAR_NT)


State 125

   67 SIZE_EXPRESSION: ATSIZE IDENTIFIER_NT .
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    OSB  shift, and go to state 26

    $default  reduce using rule 67 (SIZE_EXPRESSION)


State 126

   68 SIZE_EXPRESSION: AATSIZE IDENTIFIER_NT .
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    OSB  shift, and go to state 26

    $default  reduce using rule 68 (SIZE_EXPRESSION)


State 127

   35 IF_STATEMENT: IF ONB EXPRESSION CNB . STATEMENT
   36             | IF ONB EXPRESSION CNB . STATEMENT ELSE STATEMENT

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    LIST        shift, and go to state 5
    MATRIX      shift, and go to state 6
    IDENTIFIER  shift, and go to state 17
    OFB         shift, and go to state 48
    IF          shift, and go to state 52
    WHILE       shift, and go to state 53
    FOR         shift, and go to state 54
    PRINT       shift, and go to state 55
    SCAN        shift, and go to state 56
    RETURN      shift, and go to state 57

    LIST_TYPE             go to state 58
    MATRIX_TYPE           go to state 59
    STATEMENT             go to state 161
    RETURN_STATEMENT      go to state 62
    PRINT_STATEMENT       go to state 63
    SCAN_STATEMENT        go to state 64
    COMPOUND_STATEMENT    go to state 65
    IF_STATEMENT          go to state 66
    WHILE_STATEMENT       go to state 67
    FOR_STATEMENT         go to state 68
    INCDEC_STATEMENT      go to state 69
    VARIABLE_TYPE         go to state 70
    LOCAL_DECLARATION     go to state 71
    ASSIGNMENT_STATEMENT  go to state 72
    IDENTIFIER_NT         go to state 73


State 128

   65 EXPRESSION: EXPRESSION OR . EXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    NOT                  shift, and go to state 93
    OSB                  shift, and go to state 94
    ATSIZE               shift, and go to state 95
    AATSIZE              shift, and go to state 96

    EXPRESSION              go to state 162
    SIZE_EXPRESSION         go to state 98
    PEXPRESSION             go to state 99
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 129

   64 EXPRESSION: EXPRESSION AND . EXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    NOT                  shift, and go to state 93
    OSB                  shift, and go to state 94
    ATSIZE               shift, and go to state 95
    AATSIZE              shift, and go to state 96

    EXPRESSION              go to state 163
    SIZE_EXPRESSION         go to state 98
    PEXPRESSION             go to state 99
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 130

   50 EXPRESSION: PEXPRESSION PLUS . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 164
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 131

   51 EXPRESSION: PEXPRESSION MINUS . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 165
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 132

   52 EXPRESSION: PEXPRESSION MULTIPLY . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 166
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 133

   53 EXPRESSION: PEXPRESSION DIVIDE . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 167
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 134

   60 EXPRESSION: PEXPRESSION LT . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 168
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 135

   59 EXPRESSION: PEXPRESSION GT . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 169
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 136

   58 EXPRESSION: PEXPRESSION LE . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 170
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 137

   57 EXPRESSION: PEXPRESSION GE . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 171
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 138

   61 EXPRESSION: PEXPRESSION EE . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 172
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 139

   62 EXPRESSION: PEXPRESSION NEQ . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 173
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 140

   54 EXPRESSION: PEXPRESSION BAND . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 174
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 141

   56 EXPRESSION: PEXPRESSION BOR . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 175
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 142

   55 EXPRESSION: PEXPRESSION BXOR . PEXPRESSION

    IDENTIFIER           shift, and go to state 17
    CHAR                 shift, and go to state 90
    FUNCTION_IDENTIFIER  shift, and go to state 20
    N_NUMBER             shift, and go to state 28
    NON_N_NUMBER         shift, and go to state 32
    FLOATING             shift, and go to state 91
    ONB                  shift, and go to state 92
    OSB                  shift, and go to state 94

    PEXPRESSION             go to state 176
    INTEGER_NT              go to state 100
    FLOAT_NT                go to state 101
    CHARACTER_NT            go to state 102
    IDENTIFIER_NT           go to state 103
    FUNCTION_IDENTIFIER_NT  go to state 104


State 143

   78 PEXPRESSION: IDENTIFIER_NT OSB . INTEGER_NT CSB
   79            | IDENTIFIER_NT OSB . IDENTIFIER_NT CSB
   91 IDENTIFIER_NT: IDENTIFIER_NT OSB . INTEGER_NT CSB
   92              | IDENTIFIER_NT OSB . IDENTIFIER_NT CSB

    IDENTIFIER    shift, and go to state 17
    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 32

    INTEGER_NT     go to state 177
    IDENTIFIER_NT  go to state 178


State 144

   75 PEXPRESSION: FUNCTION_IDENTIFIER_NT ONB . PARAMS CNB

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    IDENTIFIER  shift, and go to state 17

    $default  reduce using rule 13 (PARAMS)

    PARAMS         go to state 179
    PARAM_LIST_NT  go to state 35
    PARAM          go to state 36
    VARIABLE_TYPE  go to state 37
    IDENTIFIER_NT  go to state 38


State 145

   37 WHILE_STATEMENT: WHILE ONB EXPRESSION CNB . STATEMENT

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    LIST        shift, and go to state 5
    MATRIX      shift, and go to state 6
    IDENTIFIER  shift, and go to state 17
    OFB         shift, and go to state 48
    IF          shift, and go to state 52
    WHILE       shift, and go to state 53
    FOR         shift, and go to state 54
    PRINT       shift, and go to state 55
    SCAN        shift, and go to state 56
    RETURN      shift, and go to state 57

    LIST_TYPE             go to state 58
    MATRIX_TYPE           go to state 59
    STATEMENT             go to state 180
    RETURN_STATEMENT      go to state 62
    PRINT_STATEMENT       go to state 63
    SCAN_STATEMENT        go to state 64
    COMPOUND_STATEMENT    go to state 65
    IF_STATEMENT          go to state 66
    WHILE_STATEMENT       go to state 67
    FOR_STATEMENT         go to state 68
    INCDEC_STATEMENT      go to state 69
    VARIABLE_TYPE         go to state 70
    LOCAL_DECLARATION     go to state 71
    ASSIGNMENT_STATEMENT  go to state 72
    IDENTIFIER_NT         go to state 73


State 146

   38 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT EXPRESSION . SEMICOLON INCDEC_STATEMENT CNB STATEMENT
   64 EXPRESSION: EXPRESSION . AND EXPRESSION
   65           | EXPRESSION . OR EXPRESSION

    SEMICOLON  shift, and go to state 181
    OR         shift, and go to state 128
    AND        shift, and go to state 129


State 147

   32 PRINT_STATEMENT: PRINT ONB PRINT_SCAN_ITEM CNB . SEMICOLON

    SEMICOLON  shift, and go to state 182


State 148

   33 SCAN_STATEMENT: SCAN ONB PRINT_SCAN_ITEM CNB . SEMICOLON

    SEMICOLON  shift, and go to state 183


State 149

   46 LOCAL_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB INTEGER_NT . CSB SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT OSB INTEGER_NT . CSB

    CSB  shift, and go to state 184


State 150

   47 LOCAL_DECLARATION: MATRIX_TYPE IDENTIFIER_NT OSB INTEGER_NT . COMMA INTEGER_NT CSB SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT OSB INTEGER_NT . CSB

    COMMA  shift, and go to state 185
    CSB    shift, and go to state 40


State 151

   48 ASSIGNMENT_STATEMENT: IDENTIFIER_NT EQUALTO EXPRESSION SEMICOLON .

    $default  reduce using rule 48 (ASSIGNMENT_STATEMENT)


State 152

   80 PEXPRESSION: ONB EXPRESSION CNB .

    $default  reduce using rule 80 (PEXPRESSION)


State 153

   81 PEXPRESSION: OSB LIST_ELEMENT CSB .

    $default  reduce using rule 81 (PEXPRESSION)


State 154

   69 LIST_ELEMENT: LIST_ELEMENT INTEGER_NT . SEMICOLON

    SEMICOLON  shift, and go to state 186


State 155

   83 PEXPRESSION: OSB MATRIX_ELEMENT CSB .

    $default  reduce using rule 83 (PEXPRESSION)


State 156

   71 MATRIX_ELEMENT: MATRIX_ELEMENT MATVAR_NT . SEMICOLON
   73 MATVAR_NT: MATVAR_NT . COMMA INTEGER_NT

    COMMA      shift, and go to state 158
    SEMICOLON  shift, and go to state 187


State 157

   74 MATVAR_NT: INTEGER_NT .

    $default  reduce using rule 74 (MATVAR_NT)


State 158

   73 MATVAR_NT: MATVAR_NT COMMA . INTEGER_NT

    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 32

    INTEGER_NT  go to state 188


State 159

   72 MATRIX_ELEMENT: MATVAR_NT SEMICOLON .

    $default  reduce using rule 72 (MATRIX_ELEMENT)


State 160

   70 LIST_ELEMENT: INTEGER_NT SEMICOLON .

    $default  reduce using rule 70 (LIST_ELEMENT)


State 161

   35 IF_STATEMENT: IF ONB EXPRESSION CNB STATEMENT .
   36             | IF ONB EXPRESSION CNB STATEMENT . ELSE STATEMENT

    ELSE  shift, and go to state 189

    ELSE      [reduce using rule 35 (IF_STATEMENT)]
    $default  reduce using rule 35 (IF_STATEMENT)


State 162

   64 EXPRESSION: EXPRESSION . AND EXPRESSION
   65           | EXPRESSION . OR EXPRESSION
   65           | EXPRESSION OR EXPRESSION .

    OR   shift, and go to state 128
    AND  shift, and go to state 129

    OR        [reduce using rule 65 (EXPRESSION)]
    AND       [reduce using rule 65 (EXPRESSION)]
    $default  reduce using rule 65 (EXPRESSION)


State 163

   64 EXPRESSION: EXPRESSION . AND EXPRESSION
   64           | EXPRESSION AND EXPRESSION .
   65           | EXPRESSION . OR EXPRESSION

    OR   shift, and go to state 128
    AND  shift, and go to state 129

    OR        [reduce using rule 64 (EXPRESSION)]
    AND       [reduce using rule 64 (EXPRESSION)]
    $default  reduce using rule 64 (EXPRESSION)


State 164

   50 EXPRESSION: PEXPRESSION PLUS PEXPRESSION .

    $default  reduce using rule 50 (EXPRESSION)


State 165

   51 EXPRESSION: PEXPRESSION MINUS PEXPRESSION .

    $default  reduce using rule 51 (EXPRESSION)


State 166

   52 EXPRESSION: PEXPRESSION MULTIPLY PEXPRESSION .

    $default  reduce using rule 52 (EXPRESSION)


State 167

   53 EXPRESSION: PEXPRESSION DIVIDE PEXPRESSION .

    $default  reduce using rule 53 (EXPRESSION)


State 168

   60 EXPRESSION: PEXPRESSION LT PEXPRESSION .

    $default  reduce using rule 60 (EXPRESSION)


State 169

   59 EXPRESSION: PEXPRESSION GT PEXPRESSION .

    $default  reduce using rule 59 (EXPRESSION)


State 170

   58 EXPRESSION: PEXPRESSION LE PEXPRESSION .

    $default  reduce using rule 58 (EXPRESSION)


State 171

   57 EXPRESSION: PEXPRESSION GE PEXPRESSION .

    $default  reduce using rule 57 (EXPRESSION)


State 172

   61 EXPRESSION: PEXPRESSION EE PEXPRESSION .

    $default  reduce using rule 61 (EXPRESSION)


State 173

   62 EXPRESSION: PEXPRESSION NEQ PEXPRESSION .

    $default  reduce using rule 62 (EXPRESSION)


State 174

   54 EXPRESSION: PEXPRESSION BAND PEXPRESSION .

    $default  reduce using rule 54 (EXPRESSION)


State 175

   56 EXPRESSION: PEXPRESSION BOR PEXPRESSION .

    $default  reduce using rule 56 (EXPRESSION)


State 176

   55 EXPRESSION: PEXPRESSION BXOR PEXPRESSION .

    $default  reduce using rule 55 (EXPRESSION)


State 177

   78 PEXPRESSION: IDENTIFIER_NT OSB INTEGER_NT . CSB
   91 IDENTIFIER_NT: IDENTIFIER_NT OSB INTEGER_NT . CSB

    CSB  shift, and go to state 190


State 178

   79 PEXPRESSION: IDENTIFIER_NT OSB IDENTIFIER_NT . CSB
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB
   92              | IDENTIFIER_NT OSB IDENTIFIER_NT . CSB

    OSB  shift, and go to state 26
    CSB  shift, and go to state 191


State 179

   75 PEXPRESSION: FUNCTION_IDENTIFIER_NT ONB PARAMS . CNB

    CNB  shift, and go to state 192


State 180

   37 WHILE_STATEMENT: WHILE ONB EXPRESSION CNB STATEMENT .

    $default  reduce using rule 37 (WHILE_STATEMENT)


State 181

   38 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON . INCDEC_STATEMENT CNB STATEMENT

    IDENTIFIER  shift, and go to state 17

    INCDEC_STATEMENT  go to state 193
    IDENTIFIER_NT     go to state 194


State 182

   32 PRINT_STATEMENT: PRINT ONB PRINT_SCAN_ITEM CNB SEMICOLON .

    $default  reduce using rule 32 (PRINT_STATEMENT)


State 183

   33 SCAN_STATEMENT: SCAN ONB PRINT_SCAN_ITEM CNB SEMICOLON .

    $default  reduce using rule 33 (SCAN_STATEMENT)


State 184

   46 LOCAL_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB INTEGER_NT CSB . SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT OSB INTEGER_NT CSB .

    SEMICOLON  shift, and go to state 195

    $default  reduce using rule 91 (IDENTIFIER_NT)


State 185

   47 LOCAL_DECLARATION: MATRIX_TYPE IDENTIFIER_NT OSB INTEGER_NT COMMA . INTEGER_NT CSB SEMICOLON

    N_NUMBER      shift, and go to state 28
    NON_N_NUMBER  shift, and go to state 32

    INTEGER_NT  go to state 196


State 186

   69 LIST_ELEMENT: LIST_ELEMENT INTEGER_NT SEMICOLON .

    $default  reduce using rule 69 (LIST_ELEMENT)


State 187

   71 MATRIX_ELEMENT: MATRIX_ELEMENT MATVAR_NT SEMICOLON .

    $default  reduce using rule 71 (MATRIX_ELEMENT)


State 188

   73 MATVAR_NT: MATVAR_NT COMMA INTEGER_NT .

    $default  reduce using rule 73 (MATVAR_NT)


State 189

   36 IF_STATEMENT: IF ONB EXPRESSION CNB STATEMENT ELSE . STATEMENT

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    LIST        shift, and go to state 5
    MATRIX      shift, and go to state 6
    IDENTIFIER  shift, and go to state 17
    OFB         shift, and go to state 48
    IF          shift, and go to state 52
    WHILE       shift, and go to state 53
    FOR         shift, and go to state 54
    PRINT       shift, and go to state 55
    SCAN        shift, and go to state 56
    RETURN      shift, and go to state 57

    LIST_TYPE             go to state 58
    MATRIX_TYPE           go to state 59
    STATEMENT             go to state 197
    RETURN_STATEMENT      go to state 62
    PRINT_STATEMENT       go to state 63
    SCAN_STATEMENT        go to state 64
    COMPOUND_STATEMENT    go to state 65
    IF_STATEMENT          go to state 66
    WHILE_STATEMENT       go to state 67
    FOR_STATEMENT         go to state 68
    INCDEC_STATEMENT      go to state 69
    VARIABLE_TYPE         go to state 70
    LOCAL_DECLARATION     go to state 71
    ASSIGNMENT_STATEMENT  go to state 72
    IDENTIFIER_NT         go to state 73


State 190

   78 PEXPRESSION: IDENTIFIER_NT OSB INTEGER_NT CSB .
   91 IDENTIFIER_NT: IDENTIFIER_NT OSB INTEGER_NT CSB .

    SEMICOLON  reduce using rule 78 (PEXPRESSION)
    SEMICOLON  [reduce using rule 91 (IDENTIFIER_NT)]
    CNB        reduce using rule 78 (PEXPRESSION)
    CNB        [reduce using rule 91 (IDENTIFIER_NT)]
    PLUS       reduce using rule 78 (PEXPRESSION)
    PLUS       [reduce using rule 91 (IDENTIFIER_NT)]
    MINUS      reduce using rule 78 (PEXPRESSION)
    MINUS      [reduce using rule 91 (IDENTIFIER_NT)]
    MULTIPLY   reduce using rule 78 (PEXPRESSION)
    MULTIPLY   [reduce using rule 91 (IDENTIFIER_NT)]
    DIVIDE     reduce using rule 78 (PEXPRESSION)
    DIVIDE     [reduce using rule 91 (IDENTIFIER_NT)]
    OR         reduce using rule 78 (PEXPRESSION)
    OR         [reduce using rule 91 (IDENTIFIER_NT)]
    AND        reduce using rule 78 (PEXPRESSION)
    AND        [reduce using rule 91 (IDENTIFIER_NT)]
    LT         reduce using rule 78 (PEXPRESSION)
    LT         [reduce using rule 91 (IDENTIFIER_NT)]
    GT         reduce using rule 78 (PEXPRESSION)
    GT         [reduce using rule 91 (IDENTIFIER_NT)]
    LE         reduce using rule 78 (PEXPRESSION)
    LE         [reduce using rule 91 (IDENTIFIER_NT)]
    GE         reduce using rule 78 (PEXPRESSION)
    GE         [reduce using rule 91 (IDENTIFIER_NT)]
    EE         reduce using rule 78 (PEXPRESSION)
    EE         [reduce using rule 91 (IDENTIFIER_NT)]
    NEQ        reduce using rule 78 (PEXPRESSION)
    NEQ        [reduce using rule 91 (IDENTIFIER_NT)]
    BAND       reduce using rule 78 (PEXPRESSION)
    BAND       [reduce using rule 91 (IDENTIFIER_NT)]
    BOR        reduce using rule 78 (PEXPRESSION)
    BOR        [reduce using rule 91 (IDENTIFIER_NT)]
    BXOR       reduce using rule 78 (PEXPRESSION)
    BXOR       [reduce using rule 91 (IDENTIFIER_NT)]
    OSB        reduce using rule 91 (IDENTIFIER_NT)
    $default   reduce using rule 78 (PEXPRESSION)


State 191

   79 PEXPRESSION: IDENTIFIER_NT OSB IDENTIFIER_NT CSB .
   92 IDENTIFIER_NT: IDENTIFIER_NT OSB IDENTIFIER_NT CSB .

    SEMICOLON  reduce using rule 79 (PEXPRESSION)
    SEMICOLON  [reduce using rule 92 (IDENTIFIER_NT)]
    CNB        reduce using rule 79 (PEXPRESSION)
    CNB        [reduce using rule 92 (IDENTIFIER_NT)]
    PLUS       reduce using rule 79 (PEXPRESSION)
    PLUS       [reduce using rule 92 (IDENTIFIER_NT)]
    MINUS      reduce using rule 79 (PEXPRESSION)
    MINUS      [reduce using rule 92 (IDENTIFIER_NT)]
    MULTIPLY   reduce using rule 79 (PEXPRESSION)
    MULTIPLY   [reduce using rule 92 (IDENTIFIER_NT)]
    DIVIDE     reduce using rule 79 (PEXPRESSION)
    DIVIDE     [reduce using rule 92 (IDENTIFIER_NT)]
    OR         reduce using rule 79 (PEXPRESSION)
    OR         [reduce using rule 92 (IDENTIFIER_NT)]
    AND        reduce using rule 79 (PEXPRESSION)
    AND        [reduce using rule 92 (IDENTIFIER_NT)]
    LT         reduce using rule 79 (PEXPRESSION)
    LT         [reduce using rule 92 (IDENTIFIER_NT)]
    GT         reduce using rule 79 (PEXPRESSION)
    GT         [reduce using rule 92 (IDENTIFIER_NT)]
    LE         reduce using rule 79 (PEXPRESSION)
    LE         [reduce using rule 92 (IDENTIFIER_NT)]
    GE         reduce using rule 79 (PEXPRESSION)
    GE         [reduce using rule 92 (IDENTIFIER_NT)]
    EE         reduce using rule 79 (PEXPRESSION)
    EE         [reduce using rule 92 (IDENTIFIER_NT)]
    NEQ        reduce using rule 79 (PEXPRESSION)
    NEQ        [reduce using rule 92 (IDENTIFIER_NT)]
    BAND       reduce using rule 79 (PEXPRESSION)
    BAND       [reduce using rule 92 (IDENTIFIER_NT)]
    BOR        reduce using rule 79 (PEXPRESSION)
    BOR        [reduce using rule 92 (IDENTIFIER_NT)]
    BXOR       reduce using rule 79 (PEXPRESSION)
    BXOR       [reduce using rule 92 (IDENTIFIER_NT)]
    OSB        reduce using rule 92 (IDENTIFIER_NT)
    $default   reduce using rule 79 (PEXPRESSION)


State 192

   75 PEXPRESSION: FUNCTION_IDENTIFIER_NT ONB PARAMS CNB .

    $default  reduce using rule 75 (PEXPRESSION)


State 193

   38 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON INCDEC_STATEMENT . CNB STATEMENT

    CNB  shift, and go to state 198


State 194

   39 INCDEC_STATEMENT: IDENTIFIER_NT . INC SEMICOLON
   40                 | IDENTIFIER_NT . DEC SEMICOLON
   91 IDENTIFIER_NT: IDENTIFIER_NT . OSB INTEGER_NT CSB
   92              | IDENTIFIER_NT . OSB IDENTIFIER_NT CSB

    INC  shift, and go to state 88
    DEC  shift, and go to state 89
    OSB  shift, and go to state 26


State 195

   46 LOCAL_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB INTEGER_NT CSB SEMICOLON .

    $default  reduce using rule 46 (LOCAL_DECLARATION)


State 196

   47 LOCAL_DECLARATION: MATRIX_TYPE IDENTIFIER_NT OSB INTEGER_NT COMMA INTEGER_NT . CSB SEMICOLON

    CSB  shift, and go to state 199


State 197

   36 IF_STATEMENT: IF ONB EXPRESSION CNB STATEMENT ELSE STATEMENT .

    $default  reduce using rule 36 (IF_STATEMENT)


State 198

   38 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON INCDEC_STATEMENT CNB . STATEMENT

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    LIST        shift, and go to state 5
    MATRIX      shift, and go to state 6
    IDENTIFIER  shift, and go to state 17
    OFB         shift, and go to state 48
    IF          shift, and go to state 52
    WHILE       shift, and go to state 53
    FOR         shift, and go to state 54
    PRINT       shift, and go to state 55
    SCAN        shift, and go to state 56
    RETURN      shift, and go to state 57

    LIST_TYPE             go to state 58
    MATRIX_TYPE           go to state 59
    STATEMENT             go to state 200
    RETURN_STATEMENT      go to state 62
    PRINT_STATEMENT       go to state 63
    SCAN_STATEMENT        go to state 64
    COMPOUND_STATEMENT    go to state 65
    IF_STATEMENT          go to state 66
    WHILE_STATEMENT       go to state 67
    FOR_STATEMENT         go to state 68
    INCDEC_STATEMENT      go to state 69
    VARIABLE_TYPE         go to state 70
    LOCAL_DECLARATION     go to state 71
    ASSIGNMENT_STATEMENT  go to state 72
    IDENTIFIER_NT         go to state 73


State 199

   47 LOCAL_DECLARATION: MATRIX_TYPE IDENTIFIER_NT OSB INTEGER_NT COMMA INTEGER_NT CSB . SEMICOLON

    SEMICOLON  shift, and go to state 201


State 200

   38 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON INCDEC_STATEMENT CNB STATEMENT .

    $default  reduce using rule 38 (FOR_STATEMENT)


State 201

   47 LOCAL_DECLARATION: MATRIX_TYPE IDENTIFIER_NT OSB INTEGER_NT COMMA INTEGER_NT CSB SEMICOLON .

    $default  reduce using rule 47 (LOCAL_DECLARATION)
