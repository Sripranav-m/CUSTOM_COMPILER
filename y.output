Nonterminals useless in grammar

    LOCAL_DECLARATION_LIST


Terminals unused in grammar

    ELSE
    ELIF
    OR
    AND
    NOT
    IC


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: DECLARATION_LIST

    2 DECLARATION_LIST: DECLARATION_LIST DECLARATION
    3                 | DECLARATION

    4 DECLARATION: VARIABLE_DECLARATION
    5            | FUNCTION_DECLARATION

    6 VARIABLE_DECLARATION: VARIABLE_TYPE IDENTIFIER_NT SEMICOLON
    7                     | LIST_TYPE IDENTIFIER_NT OSB NUMBER CSB SEMICOLON

    8 LIST_TYPE: LIST

    9 FUNCTION_DECLARATION: VARIABLE_TYPE FUNCTION_IDENTIFIER_NT ONB PARAMS CNB COMPOUND_STATEMENT

   10 PARAMS: PARAM_LIST_NT
   11       | %empty

   12 PARAM_LIST_NT: PARAM_LIST_NT COMMA PARAM
   13              | PARAM

   14 PARAM: VARIABLE_TYPE IDENTIFIER_NT

   15 STATEMENT_LIST: STATEMENT_LIST STATEMENT
   16               | STATEMENT

   17 STATEMENT: ASSIGNMENT_STATEMENT
   18          | COMPOUND_STATEMENT
   19          | IF_STATEMENT
   20          | WHILE_STATEMENT
   21          | FOR_STATEMENT
   22          | INCDEC_STATEMENT
   23          | LOCAL_DECLARATION
   24          | PRINT_STATEMENT
   25          | SCAN_STATEMENT

   26 PRINT_STATEMENT: PRINT ONB PRINT_SCAN_ITEM CNB SEMICOLON

   27 SCAN_STATEMENT: SCAN ONB PRINT_SCAN_ITEM CNB SEMICOLON

   28 COMPOUND_STATEMENT: OFB STATEMENT_LIST CFB

   29 IF_STATEMENT: IF ONB EXPRESSION CNB STATEMENT

   30 WHILE_STATEMENT: WHILE ONB EXPRESSION CNB STATEMENT

   31 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON INCDEC_STATEMENT CNB STATEMENT

   32 INCDEC_STATEMENT: IDENTIFIER_NT INC SEMICOLON
   33                 | IDENTIFIER_NT DEC SEMICOLON

   34 VARIABLE_TYPE: INT
   35              | STRING
   36              | CHARACTER
   37              | FLOAT

   38 LOCAL_DECLARATION: VARIABLE_TYPE IDENTIFIER_NT SEMICOLON
   39                  | LIST_TYPE IDENTIFIER_NT OSB INTEGER_NT CSB SEMICOLON

   40 ASSIGNMENT_STATEMENT: IDENTIFIER_NT EQUALTO EXPRESSION SEMICOLON

   41 EXPRESSION: PEXPRESSION
   42           | PEXPRESSION PLUS PEXPRESSION
   43           | PEXPRESSION MINUS PEXPRESSION
   44           | PEXPRESSION MULTIPLY PEXPRESSION
   45           | PEXPRESSION BAND PEXPRESSION
   46           | PEXPRESSION BXOR PEXPRESSION
   47           | PEXPRESSION BOR PEXPRESSION
   48           | PEXPRESSION GE PEXPRESSION
   49           | PEXPRESSION LE PEXPRESSION
   50           | PEXPRESSION GT PEXPRESSION
   51           | PEXPRESSION LT PEXPRESSION
   52           | PEXPRESSION EE PEXPRESSION
   53           | PEXPRESSION NEQ PEXPRESSION
   54           | PEXPRESSION_S
   55           | PEXPRESSION_F
   56           | PEXPRESSION_L

   57 PEXPRESSION_L: OSB LIST_ELEMENT CSB

   58 LIST_ELEMENT: LIST_ELEMENT NUMBER SEMICOLON
   59             | NUMBER SEMICOLON

   60 PEXPRESSION: INTEGER_NT
   61            | IDENTIFIER_NT
   62            | ONB EXPRESSION CNB

   63 PEXPRESSION_S: STRING_NT
   64              | CHARACTER_NT

   65 PEXPRESSION_F: FLOAT_NT

   66 PRINT_SCAN_ITEM: IDENTIFIER_NT

   67 INTEGER_NT: NUMBER

   68 STRING_NT: STR

   69 FLOAT_NT: FLOATING

   70 CHARACTER_NT: CHAR

   71 IDENTIFIER_NT: IDENTIFIER

   72 FUNCTION_IDENTIFIER_NT: FUNCTION_IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <node> (258) 34
    STRING <node> (259) 35
    CHARACTER <node> (260) 36
    FLOAT <node> (261) 37
    LIST <node> (262) 8
    IDENTIFIER <node> (263) 71
    CHAR <node> (264) 70
    STR <node> (265) 68
    FUNCTION_IDENTIFIER <node> (266) 72
    NUMBER <node> (267) 7 58 59 67
    FLOATING <node> (268) 69
    COMMA <node> (269) 12
    SEMICOLON <node> (270) 6 7 26 27 31 32 33 38 39 40 58 59
    OFB <node> (271) 28
    CFB <node> (272) 28
    ONB <node> (273) 9 26 27 29 30 31 62
    CNB <node> (274) 9 26 27 29 30 31 62
    PLUS <node> (275) 42
    MINUS <node> (276) 43
    MULTIPLY <node> (277) 44
    IF <node> (278) 29
    ELSE <node> (279)
    ELIF <node> (280)
    WHILE <node> (281) 30
    FOR <node> (282) 31
    PRINT <node> (283) 26
    SCAN <node> (284) 27
    OR <node> (285)
    AND <node> (286)
    NOT <node> (287)
    EQUALTO <node> (288) 40
    LT <node> (289) 51
    GT <node> (290) 50
    LE <node> (291) 49
    GE <node> (292) 48
    EE <node> (293) 52
    NEQ <node> (294) 53
    INC <node> (295) 32
    DEC <node> (296) 33
    IC <node> (297)
    BAND <node> (298) 45
    BOR <node> (299) 47
    BXOR <node> (300) 46
    OSB <node> (301) 7 39 57
    CSB <node> (302) 7 39 57


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    PROGRAM <node> (49)
        on left: 1
        on right: 0
    DECLARATION_LIST <node> (50)
        on left: 2 3
        on right: 1 2
    DECLARATION <node> (51)
        on left: 4 5
        on right: 2 3
    VARIABLE_DECLARATION <node> (52)
        on left: 6 7
        on right: 4
    LIST_TYPE <node> (53)
        on left: 8
        on right: 7 39
    FUNCTION_DECLARATION <node> (54)
        on left: 9
        on right: 5
    PARAMS <node> (55)
        on left: 10 11
        on right: 9
    PARAM_LIST_NT <node> (56)
        on left: 12 13
        on right: 10 12
    PARAM <node> (57)
        on left: 14
        on right: 12 13
    STATEMENT_LIST <node> (58)
        on left: 15 16
        on right: 15 28
    STATEMENT <node> (59)
        on left: 17 18 19 20 21 22 23 24 25
        on right: 15 16 29 30 31
    PRINT_STATEMENT <node> (60)
        on left: 26
        on right: 24
    SCAN_STATEMENT <node> (61)
        on left: 27
        on right: 25
    COMPOUND_STATEMENT <node> (62)
        on left: 28
        on right: 9 18
    IF_STATEMENT <node> (63)
        on left: 29
        on right: 19
    WHILE_STATEMENT <node> (64)
        on left: 30
        on right: 20
    FOR_STATEMENT <node> (65)
        on left: 31
        on right: 21
    INCDEC_STATEMENT <node> (66)
        on left: 32 33
        on right: 22 31
    VARIABLE_TYPE <node> (67)
        on left: 34 35 36 37
        on right: 6 9 14 38
    LOCAL_DECLARATION <node> (68)
        on left: 38 39
        on right: 23
    ASSIGNMENT_STATEMENT <node> (69)
        on left: 40
        on right: 17 31
    EXPRESSION <node> (70)
        on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
        on right: 29 30 31 40 62
    PEXPRESSION_L <node> (71)
        on left: 57
        on right: 56
    LIST_ELEMENT <node> (72)
        on left: 58 59
        on right: 57 58
    PEXPRESSION <node> (73)
        on left: 60 61 62
        on right: 41 42 43 44 45 46 47 48 49 50 51 52 53
    PEXPRESSION_S <node> (74)
        on left: 63 64
        on right: 54
    PEXPRESSION_F <node> (75)
        on left: 65
        on right: 55
    PRINT_SCAN_ITEM <node> (76)
        on left: 66
        on right: 26 27
    INTEGER_NT <node> (77)
        on left: 67
        on right: 39 60
    STRING_NT <node> (78)
        on left: 68
        on right: 63
    FLOAT_NT <node> (79)
        on left: 69
        on right: 65
    CHARACTER_NT <node> (80)
        on left: 70
        on right: 64
    IDENTIFIER_NT <node> (81)
        on left: 71
        on right: 6 7 14 32 33 38 39 40 61 66
    FUNCTION_IDENTIFIER_NT <node> (82)
        on left: 72
        on right: 9


State 0

    0 $accept: . PROGRAM $end

    INT        shift, and go to state 1
    STRING     shift, and go to state 2
    CHARACTER  shift, and go to state 3
    FLOAT      shift, and go to state 4
    LIST       shift, and go to state 5

    PROGRAM               go to state 6
    DECLARATION_LIST      go to state 7
    DECLARATION           go to state 8
    VARIABLE_DECLARATION  go to state 9
    LIST_TYPE             go to state 10
    FUNCTION_DECLARATION  go to state 11
    VARIABLE_TYPE         go to state 12


State 1

   34 VARIABLE_TYPE: INT .

    $default  reduce using rule 34 (VARIABLE_TYPE)


State 2

   35 VARIABLE_TYPE: STRING .

    $default  reduce using rule 35 (VARIABLE_TYPE)


State 3

   36 VARIABLE_TYPE: CHARACTER .

    $default  reduce using rule 36 (VARIABLE_TYPE)


State 4

   37 VARIABLE_TYPE: FLOAT .

    $default  reduce using rule 37 (VARIABLE_TYPE)


State 5

    8 LIST_TYPE: LIST .

    $default  reduce using rule 8 (LIST_TYPE)


State 6

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 13


State 7

    1 PROGRAM: DECLARATION_LIST .
    2 DECLARATION_LIST: DECLARATION_LIST . DECLARATION

    INT        shift, and go to state 1
    STRING     shift, and go to state 2
    CHARACTER  shift, and go to state 3
    FLOAT      shift, and go to state 4
    LIST       shift, and go to state 5

    $default  reduce using rule 1 (PROGRAM)

    DECLARATION           go to state 14
    VARIABLE_DECLARATION  go to state 9
    LIST_TYPE             go to state 10
    FUNCTION_DECLARATION  go to state 11
    VARIABLE_TYPE         go to state 12


State 8

    3 DECLARATION_LIST: DECLARATION .

    $default  reduce using rule 3 (DECLARATION_LIST)


State 9

    4 DECLARATION: VARIABLE_DECLARATION .

    $default  reduce using rule 4 (DECLARATION)


State 10

    7 VARIABLE_DECLARATION: LIST_TYPE . IDENTIFIER_NT OSB NUMBER CSB SEMICOLON

    IDENTIFIER  shift, and go to state 15

    IDENTIFIER_NT  go to state 16


State 11

    5 DECLARATION: FUNCTION_DECLARATION .

    $default  reduce using rule 5 (DECLARATION)


State 12

    6 VARIABLE_DECLARATION: VARIABLE_TYPE . IDENTIFIER_NT SEMICOLON
    9 FUNCTION_DECLARATION: VARIABLE_TYPE . FUNCTION_IDENTIFIER_NT ONB PARAMS CNB COMPOUND_STATEMENT

    IDENTIFIER           shift, and go to state 15
    FUNCTION_IDENTIFIER  shift, and go to state 17

    IDENTIFIER_NT           go to state 18
    FUNCTION_IDENTIFIER_NT  go to state 19


State 13

    0 $accept: PROGRAM $end .

    $default  accept


State 14

    2 DECLARATION_LIST: DECLARATION_LIST DECLARATION .

    $default  reduce using rule 2 (DECLARATION_LIST)


State 15

   71 IDENTIFIER_NT: IDENTIFIER .

    $default  reduce using rule 71 (IDENTIFIER_NT)


State 16

    7 VARIABLE_DECLARATION: LIST_TYPE IDENTIFIER_NT . OSB NUMBER CSB SEMICOLON

    OSB  shift, and go to state 20


State 17

   72 FUNCTION_IDENTIFIER_NT: FUNCTION_IDENTIFIER .

    $default  reduce using rule 72 (FUNCTION_IDENTIFIER_NT)


State 18

    6 VARIABLE_DECLARATION: VARIABLE_TYPE IDENTIFIER_NT . SEMICOLON

    SEMICOLON  shift, and go to state 21


State 19

    9 FUNCTION_DECLARATION: VARIABLE_TYPE FUNCTION_IDENTIFIER_NT . ONB PARAMS CNB COMPOUND_STATEMENT

    ONB  shift, and go to state 22


State 20

    7 VARIABLE_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB . NUMBER CSB SEMICOLON

    NUMBER  shift, and go to state 23


State 21

    6 VARIABLE_DECLARATION: VARIABLE_TYPE IDENTIFIER_NT SEMICOLON .

    $default  reduce using rule 6 (VARIABLE_DECLARATION)


State 22

    9 FUNCTION_DECLARATION: VARIABLE_TYPE FUNCTION_IDENTIFIER_NT ONB . PARAMS CNB COMPOUND_STATEMENT

    INT        shift, and go to state 1
    STRING     shift, and go to state 2
    CHARACTER  shift, and go to state 3
    FLOAT      shift, and go to state 4

    $default  reduce using rule 11 (PARAMS)

    PARAMS         go to state 24
    PARAM_LIST_NT  go to state 25
    PARAM          go to state 26
    VARIABLE_TYPE  go to state 27


State 23

    7 VARIABLE_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB NUMBER . CSB SEMICOLON

    CSB  shift, and go to state 28


State 24

    9 FUNCTION_DECLARATION: VARIABLE_TYPE FUNCTION_IDENTIFIER_NT ONB PARAMS . CNB COMPOUND_STATEMENT

    CNB  shift, and go to state 29


State 25

   10 PARAMS: PARAM_LIST_NT .
   12 PARAM_LIST_NT: PARAM_LIST_NT . COMMA PARAM

    COMMA  shift, and go to state 30

    $default  reduce using rule 10 (PARAMS)


State 26

   13 PARAM_LIST_NT: PARAM .

    $default  reduce using rule 13 (PARAM_LIST_NT)


State 27

   14 PARAM: VARIABLE_TYPE . IDENTIFIER_NT

    IDENTIFIER  shift, and go to state 15

    IDENTIFIER_NT  go to state 31


State 28

    7 VARIABLE_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB NUMBER CSB . SEMICOLON

    SEMICOLON  shift, and go to state 32


State 29

    9 FUNCTION_DECLARATION: VARIABLE_TYPE FUNCTION_IDENTIFIER_NT ONB PARAMS CNB . COMPOUND_STATEMENT

    OFB  shift, and go to state 33

    COMPOUND_STATEMENT  go to state 34


State 30

   12 PARAM_LIST_NT: PARAM_LIST_NT COMMA . PARAM

    INT        shift, and go to state 1
    STRING     shift, and go to state 2
    CHARACTER  shift, and go to state 3
    FLOAT      shift, and go to state 4

    PARAM          go to state 35
    VARIABLE_TYPE  go to state 27


State 31

   14 PARAM: VARIABLE_TYPE IDENTIFIER_NT .

    $default  reduce using rule 14 (PARAM)


State 32

    7 VARIABLE_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB NUMBER CSB SEMICOLON .

    $default  reduce using rule 7 (VARIABLE_DECLARATION)


State 33

   28 COMPOUND_STATEMENT: OFB . STATEMENT_LIST CFB

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    LIST        shift, and go to state 5
    IDENTIFIER  shift, and go to state 15
    OFB         shift, and go to state 33
    IF          shift, and go to state 36
    WHILE       shift, and go to state 37
    FOR         shift, and go to state 38
    PRINT       shift, and go to state 39
    SCAN        shift, and go to state 40

    LIST_TYPE             go to state 41
    STATEMENT_LIST        go to state 42
    STATEMENT             go to state 43
    PRINT_STATEMENT       go to state 44
    SCAN_STATEMENT        go to state 45
    COMPOUND_STATEMENT    go to state 46
    IF_STATEMENT          go to state 47
    WHILE_STATEMENT       go to state 48
    FOR_STATEMENT         go to state 49
    INCDEC_STATEMENT      go to state 50
    VARIABLE_TYPE         go to state 51
    LOCAL_DECLARATION     go to state 52
    ASSIGNMENT_STATEMENT  go to state 53
    IDENTIFIER_NT         go to state 54


State 34

    9 FUNCTION_DECLARATION: VARIABLE_TYPE FUNCTION_IDENTIFIER_NT ONB PARAMS CNB COMPOUND_STATEMENT .

    $default  reduce using rule 9 (FUNCTION_DECLARATION)


State 35

   12 PARAM_LIST_NT: PARAM_LIST_NT COMMA PARAM .

    $default  reduce using rule 12 (PARAM_LIST_NT)


State 36

   29 IF_STATEMENT: IF . ONB EXPRESSION CNB STATEMENT

    ONB  shift, and go to state 55


State 37

   30 WHILE_STATEMENT: WHILE . ONB EXPRESSION CNB STATEMENT

    ONB  shift, and go to state 56


State 38

   31 FOR_STATEMENT: FOR . ONB ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON INCDEC_STATEMENT CNB STATEMENT

    ONB  shift, and go to state 57


State 39

   26 PRINT_STATEMENT: PRINT . ONB PRINT_SCAN_ITEM CNB SEMICOLON

    ONB  shift, and go to state 58


State 40

   27 SCAN_STATEMENT: SCAN . ONB PRINT_SCAN_ITEM CNB SEMICOLON

    ONB  shift, and go to state 59


State 41

   39 LOCAL_DECLARATION: LIST_TYPE . IDENTIFIER_NT OSB INTEGER_NT CSB SEMICOLON

    IDENTIFIER  shift, and go to state 15

    IDENTIFIER_NT  go to state 60


State 42

   15 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   28 COMPOUND_STATEMENT: OFB STATEMENT_LIST . CFB

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    LIST        shift, and go to state 5
    IDENTIFIER  shift, and go to state 15
    OFB         shift, and go to state 33
    CFB         shift, and go to state 61
    IF          shift, and go to state 36
    WHILE       shift, and go to state 37
    FOR         shift, and go to state 38
    PRINT       shift, and go to state 39
    SCAN        shift, and go to state 40

    LIST_TYPE             go to state 41
    STATEMENT             go to state 62
    PRINT_STATEMENT       go to state 44
    SCAN_STATEMENT        go to state 45
    COMPOUND_STATEMENT    go to state 46
    IF_STATEMENT          go to state 47
    WHILE_STATEMENT       go to state 48
    FOR_STATEMENT         go to state 49
    INCDEC_STATEMENT      go to state 50
    VARIABLE_TYPE         go to state 51
    LOCAL_DECLARATION     go to state 52
    ASSIGNMENT_STATEMENT  go to state 53
    IDENTIFIER_NT         go to state 54


State 43

   16 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 16 (STATEMENT_LIST)


State 44

   24 STATEMENT: PRINT_STATEMENT .

    $default  reduce using rule 24 (STATEMENT)


State 45

   25 STATEMENT: SCAN_STATEMENT .

    $default  reduce using rule 25 (STATEMENT)


State 46

   18 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 18 (STATEMENT)


State 47

   19 STATEMENT: IF_STATEMENT .

    $default  reduce using rule 19 (STATEMENT)


State 48

   20 STATEMENT: WHILE_STATEMENT .

    $default  reduce using rule 20 (STATEMENT)


State 49

   21 STATEMENT: FOR_STATEMENT .

    $default  reduce using rule 21 (STATEMENT)


State 50

   22 STATEMENT: INCDEC_STATEMENT .

    $default  reduce using rule 22 (STATEMENT)


State 51

   38 LOCAL_DECLARATION: VARIABLE_TYPE . IDENTIFIER_NT SEMICOLON

    IDENTIFIER  shift, and go to state 15

    IDENTIFIER_NT  go to state 63


State 52

   23 STATEMENT: LOCAL_DECLARATION .

    $default  reduce using rule 23 (STATEMENT)


State 53

   17 STATEMENT: ASSIGNMENT_STATEMENT .

    $default  reduce using rule 17 (STATEMENT)


State 54

   32 INCDEC_STATEMENT: IDENTIFIER_NT . INC SEMICOLON
   33                 | IDENTIFIER_NT . DEC SEMICOLON
   40 ASSIGNMENT_STATEMENT: IDENTIFIER_NT . EQUALTO EXPRESSION SEMICOLON

    EQUALTO  shift, and go to state 64
    INC      shift, and go to state 65
    DEC      shift, and go to state 66


State 55

   29 IF_STATEMENT: IF ONB . EXPRESSION CNB STATEMENT

    IDENTIFIER  shift, and go to state 15
    CHAR        shift, and go to state 67
    STR         shift, and go to state 68
    NUMBER      shift, and go to state 69
    FLOATING    shift, and go to state 70
    ONB         shift, and go to state 71
    OSB         shift, and go to state 72

    EXPRESSION     go to state 73
    PEXPRESSION_L  go to state 74
    PEXPRESSION    go to state 75
    PEXPRESSION_S  go to state 76
    PEXPRESSION_F  go to state 77
    INTEGER_NT     go to state 78
    STRING_NT      go to state 79
    FLOAT_NT       go to state 80
    CHARACTER_NT   go to state 81
    IDENTIFIER_NT  go to state 82


State 56

   30 WHILE_STATEMENT: WHILE ONB . EXPRESSION CNB STATEMENT

    IDENTIFIER  shift, and go to state 15
    CHAR        shift, and go to state 67
    STR         shift, and go to state 68
    NUMBER      shift, and go to state 69
    FLOATING    shift, and go to state 70
    ONB         shift, and go to state 71
    OSB         shift, and go to state 72

    EXPRESSION     go to state 83
    PEXPRESSION_L  go to state 74
    PEXPRESSION    go to state 75
    PEXPRESSION_S  go to state 76
    PEXPRESSION_F  go to state 77
    INTEGER_NT     go to state 78
    STRING_NT      go to state 79
    FLOAT_NT       go to state 80
    CHARACTER_NT   go to state 81
    IDENTIFIER_NT  go to state 82


State 57

   31 FOR_STATEMENT: FOR ONB . ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON INCDEC_STATEMENT CNB STATEMENT

    IDENTIFIER  shift, and go to state 15

    ASSIGNMENT_STATEMENT  go to state 84
    IDENTIFIER_NT         go to state 85


State 58

   26 PRINT_STATEMENT: PRINT ONB . PRINT_SCAN_ITEM CNB SEMICOLON

    IDENTIFIER  shift, and go to state 15

    PRINT_SCAN_ITEM  go to state 86
    IDENTIFIER_NT    go to state 87


State 59

   27 SCAN_STATEMENT: SCAN ONB . PRINT_SCAN_ITEM CNB SEMICOLON

    IDENTIFIER  shift, and go to state 15

    PRINT_SCAN_ITEM  go to state 88
    IDENTIFIER_NT    go to state 87


State 60

   39 LOCAL_DECLARATION: LIST_TYPE IDENTIFIER_NT . OSB INTEGER_NT CSB SEMICOLON

    OSB  shift, and go to state 89


State 61

   28 COMPOUND_STATEMENT: OFB STATEMENT_LIST CFB .

    $default  reduce using rule 28 (COMPOUND_STATEMENT)


State 62

   15 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 15 (STATEMENT_LIST)


State 63

   38 LOCAL_DECLARATION: VARIABLE_TYPE IDENTIFIER_NT . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 64

   40 ASSIGNMENT_STATEMENT: IDENTIFIER_NT EQUALTO . EXPRESSION SEMICOLON

    IDENTIFIER  shift, and go to state 15
    CHAR        shift, and go to state 67
    STR         shift, and go to state 68
    NUMBER      shift, and go to state 69
    FLOATING    shift, and go to state 70
    ONB         shift, and go to state 71
    OSB         shift, and go to state 72

    EXPRESSION     go to state 91
    PEXPRESSION_L  go to state 74
    PEXPRESSION    go to state 75
    PEXPRESSION_S  go to state 76
    PEXPRESSION_F  go to state 77
    INTEGER_NT     go to state 78
    STRING_NT      go to state 79
    FLOAT_NT       go to state 80
    CHARACTER_NT   go to state 81
    IDENTIFIER_NT  go to state 82


State 65

   32 INCDEC_STATEMENT: IDENTIFIER_NT INC . SEMICOLON

    SEMICOLON  shift, and go to state 92


State 66

   33 INCDEC_STATEMENT: IDENTIFIER_NT DEC . SEMICOLON

    SEMICOLON  shift, and go to state 93


State 67

   70 CHARACTER_NT: CHAR .

    $default  reduce using rule 70 (CHARACTER_NT)


State 68

   68 STRING_NT: STR .

    $default  reduce using rule 68 (STRING_NT)


State 69

   67 INTEGER_NT: NUMBER .

    $default  reduce using rule 67 (INTEGER_NT)


State 70

   69 FLOAT_NT: FLOATING .

    $default  reduce using rule 69 (FLOAT_NT)


State 71

   62 PEXPRESSION: ONB . EXPRESSION CNB

    IDENTIFIER  shift, and go to state 15
    CHAR        shift, and go to state 67
    STR         shift, and go to state 68
    NUMBER      shift, and go to state 69
    FLOATING    shift, and go to state 70
    ONB         shift, and go to state 71
    OSB         shift, and go to state 72

    EXPRESSION     go to state 94
    PEXPRESSION_L  go to state 74
    PEXPRESSION    go to state 75
    PEXPRESSION_S  go to state 76
    PEXPRESSION_F  go to state 77
    INTEGER_NT     go to state 78
    STRING_NT      go to state 79
    FLOAT_NT       go to state 80
    CHARACTER_NT   go to state 81
    IDENTIFIER_NT  go to state 82


State 72

   57 PEXPRESSION_L: OSB . LIST_ELEMENT CSB

    NUMBER  shift, and go to state 95

    LIST_ELEMENT  go to state 96


State 73

   29 IF_STATEMENT: IF ONB EXPRESSION . CNB STATEMENT

    CNB  shift, and go to state 97


State 74

   56 EXPRESSION: PEXPRESSION_L .

    $default  reduce using rule 56 (EXPRESSION)


State 75

   41 EXPRESSION: PEXPRESSION .
   42           | PEXPRESSION . PLUS PEXPRESSION
   43           | PEXPRESSION . MINUS PEXPRESSION
   44           | PEXPRESSION . MULTIPLY PEXPRESSION
   45           | PEXPRESSION . BAND PEXPRESSION
   46           | PEXPRESSION . BXOR PEXPRESSION
   47           | PEXPRESSION . BOR PEXPRESSION
   48           | PEXPRESSION . GE PEXPRESSION
   49           | PEXPRESSION . LE PEXPRESSION
   50           | PEXPRESSION . GT PEXPRESSION
   51           | PEXPRESSION . LT PEXPRESSION
   52           | PEXPRESSION . EE PEXPRESSION
   53           | PEXPRESSION . NEQ PEXPRESSION

    PLUS      shift, and go to state 98
    MINUS     shift, and go to state 99
    MULTIPLY  shift, and go to state 100
    LT        shift, and go to state 101
    GT        shift, and go to state 102
    LE        shift, and go to state 103
    GE        shift, and go to state 104
    EE        shift, and go to state 105
    NEQ       shift, and go to state 106
    BAND      shift, and go to state 107
    BOR       shift, and go to state 108
    BXOR      shift, and go to state 109

    $default  reduce using rule 41 (EXPRESSION)


State 76

   54 EXPRESSION: PEXPRESSION_S .

    $default  reduce using rule 54 (EXPRESSION)


State 77

   55 EXPRESSION: PEXPRESSION_F .

    $default  reduce using rule 55 (EXPRESSION)


State 78

   60 PEXPRESSION: INTEGER_NT .

    $default  reduce using rule 60 (PEXPRESSION)


State 79

   63 PEXPRESSION_S: STRING_NT .

    $default  reduce using rule 63 (PEXPRESSION_S)


State 80

   65 PEXPRESSION_F: FLOAT_NT .

    $default  reduce using rule 65 (PEXPRESSION_F)


State 81

   64 PEXPRESSION_S: CHARACTER_NT .

    $default  reduce using rule 64 (PEXPRESSION_S)


State 82

   61 PEXPRESSION: IDENTIFIER_NT .

    $default  reduce using rule 61 (PEXPRESSION)


State 83

   30 WHILE_STATEMENT: WHILE ONB EXPRESSION . CNB STATEMENT

    CNB  shift, and go to state 110


State 84

   31 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT . EXPRESSION SEMICOLON INCDEC_STATEMENT CNB STATEMENT

    IDENTIFIER  shift, and go to state 15
    CHAR        shift, and go to state 67
    STR         shift, and go to state 68
    NUMBER      shift, and go to state 69
    FLOATING    shift, and go to state 70
    ONB         shift, and go to state 71
    OSB         shift, and go to state 72

    EXPRESSION     go to state 111
    PEXPRESSION_L  go to state 74
    PEXPRESSION    go to state 75
    PEXPRESSION_S  go to state 76
    PEXPRESSION_F  go to state 77
    INTEGER_NT     go to state 78
    STRING_NT      go to state 79
    FLOAT_NT       go to state 80
    CHARACTER_NT   go to state 81
    IDENTIFIER_NT  go to state 82


State 85

   40 ASSIGNMENT_STATEMENT: IDENTIFIER_NT . EQUALTO EXPRESSION SEMICOLON

    EQUALTO  shift, and go to state 64


State 86

   26 PRINT_STATEMENT: PRINT ONB PRINT_SCAN_ITEM . CNB SEMICOLON

    CNB  shift, and go to state 112


State 87

   66 PRINT_SCAN_ITEM: IDENTIFIER_NT .

    $default  reduce using rule 66 (PRINT_SCAN_ITEM)


State 88

   27 SCAN_STATEMENT: SCAN ONB PRINT_SCAN_ITEM . CNB SEMICOLON

    CNB  shift, and go to state 113


State 89

   39 LOCAL_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB . INTEGER_NT CSB SEMICOLON

    NUMBER  shift, and go to state 69

    INTEGER_NT  go to state 114


State 90

   38 LOCAL_DECLARATION: VARIABLE_TYPE IDENTIFIER_NT SEMICOLON .

    $default  reduce using rule 38 (LOCAL_DECLARATION)


State 91

   40 ASSIGNMENT_STATEMENT: IDENTIFIER_NT EQUALTO EXPRESSION . SEMICOLON

    SEMICOLON  shift, and go to state 115


State 92

   32 INCDEC_STATEMENT: IDENTIFIER_NT INC SEMICOLON .

    $default  reduce using rule 32 (INCDEC_STATEMENT)


State 93

   33 INCDEC_STATEMENT: IDENTIFIER_NT DEC SEMICOLON .

    $default  reduce using rule 33 (INCDEC_STATEMENT)


State 94

   62 PEXPRESSION: ONB EXPRESSION . CNB

    CNB  shift, and go to state 116


State 95

   59 LIST_ELEMENT: NUMBER . SEMICOLON

    SEMICOLON  shift, and go to state 117


State 96

   57 PEXPRESSION_L: OSB LIST_ELEMENT . CSB
   58 LIST_ELEMENT: LIST_ELEMENT . NUMBER SEMICOLON

    NUMBER  shift, and go to state 118
    CSB     shift, and go to state 119


State 97

   29 IF_STATEMENT: IF ONB EXPRESSION CNB . STATEMENT

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    LIST        shift, and go to state 5
    IDENTIFIER  shift, and go to state 15
    OFB         shift, and go to state 33
    IF          shift, and go to state 36
    WHILE       shift, and go to state 37
    FOR         shift, and go to state 38
    PRINT       shift, and go to state 39
    SCAN        shift, and go to state 40

    LIST_TYPE             go to state 41
    STATEMENT             go to state 120
    PRINT_STATEMENT       go to state 44
    SCAN_STATEMENT        go to state 45
    COMPOUND_STATEMENT    go to state 46
    IF_STATEMENT          go to state 47
    WHILE_STATEMENT       go to state 48
    FOR_STATEMENT         go to state 49
    INCDEC_STATEMENT      go to state 50
    VARIABLE_TYPE         go to state 51
    LOCAL_DECLARATION     go to state 52
    ASSIGNMENT_STATEMENT  go to state 53
    IDENTIFIER_NT         go to state 54


State 98

   42 EXPRESSION: PEXPRESSION PLUS . PEXPRESSION

    IDENTIFIER  shift, and go to state 15
    NUMBER      shift, and go to state 69
    ONB         shift, and go to state 71

    PEXPRESSION    go to state 121
    INTEGER_NT     go to state 78
    IDENTIFIER_NT  go to state 82


State 99

   43 EXPRESSION: PEXPRESSION MINUS . PEXPRESSION

    IDENTIFIER  shift, and go to state 15
    NUMBER      shift, and go to state 69
    ONB         shift, and go to state 71

    PEXPRESSION    go to state 122
    INTEGER_NT     go to state 78
    IDENTIFIER_NT  go to state 82


State 100

   44 EXPRESSION: PEXPRESSION MULTIPLY . PEXPRESSION

    IDENTIFIER  shift, and go to state 15
    NUMBER      shift, and go to state 69
    ONB         shift, and go to state 71

    PEXPRESSION    go to state 123
    INTEGER_NT     go to state 78
    IDENTIFIER_NT  go to state 82


State 101

   51 EXPRESSION: PEXPRESSION LT . PEXPRESSION

    IDENTIFIER  shift, and go to state 15
    NUMBER      shift, and go to state 69
    ONB         shift, and go to state 71

    PEXPRESSION    go to state 124
    INTEGER_NT     go to state 78
    IDENTIFIER_NT  go to state 82


State 102

   50 EXPRESSION: PEXPRESSION GT . PEXPRESSION

    IDENTIFIER  shift, and go to state 15
    NUMBER      shift, and go to state 69
    ONB         shift, and go to state 71

    PEXPRESSION    go to state 125
    INTEGER_NT     go to state 78
    IDENTIFIER_NT  go to state 82


State 103

   49 EXPRESSION: PEXPRESSION LE . PEXPRESSION

    IDENTIFIER  shift, and go to state 15
    NUMBER      shift, and go to state 69
    ONB         shift, and go to state 71

    PEXPRESSION    go to state 126
    INTEGER_NT     go to state 78
    IDENTIFIER_NT  go to state 82


State 104

   48 EXPRESSION: PEXPRESSION GE . PEXPRESSION

    IDENTIFIER  shift, and go to state 15
    NUMBER      shift, and go to state 69
    ONB         shift, and go to state 71

    PEXPRESSION    go to state 127
    INTEGER_NT     go to state 78
    IDENTIFIER_NT  go to state 82


State 105

   52 EXPRESSION: PEXPRESSION EE . PEXPRESSION

    IDENTIFIER  shift, and go to state 15
    NUMBER      shift, and go to state 69
    ONB         shift, and go to state 71

    PEXPRESSION    go to state 128
    INTEGER_NT     go to state 78
    IDENTIFIER_NT  go to state 82


State 106

   53 EXPRESSION: PEXPRESSION NEQ . PEXPRESSION

    IDENTIFIER  shift, and go to state 15
    NUMBER      shift, and go to state 69
    ONB         shift, and go to state 71

    PEXPRESSION    go to state 129
    INTEGER_NT     go to state 78
    IDENTIFIER_NT  go to state 82


State 107

   45 EXPRESSION: PEXPRESSION BAND . PEXPRESSION

    IDENTIFIER  shift, and go to state 15
    NUMBER      shift, and go to state 69
    ONB         shift, and go to state 71

    PEXPRESSION    go to state 130
    INTEGER_NT     go to state 78
    IDENTIFIER_NT  go to state 82


State 108

   47 EXPRESSION: PEXPRESSION BOR . PEXPRESSION

    IDENTIFIER  shift, and go to state 15
    NUMBER      shift, and go to state 69
    ONB         shift, and go to state 71

    PEXPRESSION    go to state 131
    INTEGER_NT     go to state 78
    IDENTIFIER_NT  go to state 82


State 109

   46 EXPRESSION: PEXPRESSION BXOR . PEXPRESSION

    IDENTIFIER  shift, and go to state 15
    NUMBER      shift, and go to state 69
    ONB         shift, and go to state 71

    PEXPRESSION    go to state 132
    INTEGER_NT     go to state 78
    IDENTIFIER_NT  go to state 82


State 110

   30 WHILE_STATEMENT: WHILE ONB EXPRESSION CNB . STATEMENT

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    LIST        shift, and go to state 5
    IDENTIFIER  shift, and go to state 15
    OFB         shift, and go to state 33
    IF          shift, and go to state 36
    WHILE       shift, and go to state 37
    FOR         shift, and go to state 38
    PRINT       shift, and go to state 39
    SCAN        shift, and go to state 40

    LIST_TYPE             go to state 41
    STATEMENT             go to state 133
    PRINT_STATEMENT       go to state 44
    SCAN_STATEMENT        go to state 45
    COMPOUND_STATEMENT    go to state 46
    IF_STATEMENT          go to state 47
    WHILE_STATEMENT       go to state 48
    FOR_STATEMENT         go to state 49
    INCDEC_STATEMENT      go to state 50
    VARIABLE_TYPE         go to state 51
    LOCAL_DECLARATION     go to state 52
    ASSIGNMENT_STATEMENT  go to state 53
    IDENTIFIER_NT         go to state 54


State 111

   31 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT EXPRESSION . SEMICOLON INCDEC_STATEMENT CNB STATEMENT

    SEMICOLON  shift, and go to state 134


State 112

   26 PRINT_STATEMENT: PRINT ONB PRINT_SCAN_ITEM CNB . SEMICOLON

    SEMICOLON  shift, and go to state 135


State 113

   27 SCAN_STATEMENT: SCAN ONB PRINT_SCAN_ITEM CNB . SEMICOLON

    SEMICOLON  shift, and go to state 136


State 114

   39 LOCAL_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB INTEGER_NT . CSB SEMICOLON

    CSB  shift, and go to state 137


State 115

   40 ASSIGNMENT_STATEMENT: IDENTIFIER_NT EQUALTO EXPRESSION SEMICOLON .

    $default  reduce using rule 40 (ASSIGNMENT_STATEMENT)


State 116

   62 PEXPRESSION: ONB EXPRESSION CNB .

    $default  reduce using rule 62 (PEXPRESSION)


State 117

   59 LIST_ELEMENT: NUMBER SEMICOLON .

    $default  reduce using rule 59 (LIST_ELEMENT)


State 118

   58 LIST_ELEMENT: LIST_ELEMENT NUMBER . SEMICOLON

    SEMICOLON  shift, and go to state 138


State 119

   57 PEXPRESSION_L: OSB LIST_ELEMENT CSB .

    $default  reduce using rule 57 (PEXPRESSION_L)


State 120

   29 IF_STATEMENT: IF ONB EXPRESSION CNB STATEMENT .

    $default  reduce using rule 29 (IF_STATEMENT)


State 121

   42 EXPRESSION: PEXPRESSION PLUS PEXPRESSION .

    $default  reduce using rule 42 (EXPRESSION)


State 122

   43 EXPRESSION: PEXPRESSION MINUS PEXPRESSION .

    $default  reduce using rule 43 (EXPRESSION)


State 123

   44 EXPRESSION: PEXPRESSION MULTIPLY PEXPRESSION .

    $default  reduce using rule 44 (EXPRESSION)


State 124

   51 EXPRESSION: PEXPRESSION LT PEXPRESSION .

    $default  reduce using rule 51 (EXPRESSION)


State 125

   50 EXPRESSION: PEXPRESSION GT PEXPRESSION .

    $default  reduce using rule 50 (EXPRESSION)


State 126

   49 EXPRESSION: PEXPRESSION LE PEXPRESSION .

    $default  reduce using rule 49 (EXPRESSION)


State 127

   48 EXPRESSION: PEXPRESSION GE PEXPRESSION .

    $default  reduce using rule 48 (EXPRESSION)


State 128

   52 EXPRESSION: PEXPRESSION EE PEXPRESSION .

    $default  reduce using rule 52 (EXPRESSION)


State 129

   53 EXPRESSION: PEXPRESSION NEQ PEXPRESSION .

    $default  reduce using rule 53 (EXPRESSION)


State 130

   45 EXPRESSION: PEXPRESSION BAND PEXPRESSION .

    $default  reduce using rule 45 (EXPRESSION)


State 131

   47 EXPRESSION: PEXPRESSION BOR PEXPRESSION .

    $default  reduce using rule 47 (EXPRESSION)


State 132

   46 EXPRESSION: PEXPRESSION BXOR PEXPRESSION .

    $default  reduce using rule 46 (EXPRESSION)


State 133

   30 WHILE_STATEMENT: WHILE ONB EXPRESSION CNB STATEMENT .

    $default  reduce using rule 30 (WHILE_STATEMENT)


State 134

   31 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON . INCDEC_STATEMENT CNB STATEMENT

    IDENTIFIER  shift, and go to state 15

    INCDEC_STATEMENT  go to state 139
    IDENTIFIER_NT     go to state 140


State 135

   26 PRINT_STATEMENT: PRINT ONB PRINT_SCAN_ITEM CNB SEMICOLON .

    $default  reduce using rule 26 (PRINT_STATEMENT)


State 136

   27 SCAN_STATEMENT: SCAN ONB PRINT_SCAN_ITEM CNB SEMICOLON .

    $default  reduce using rule 27 (SCAN_STATEMENT)


State 137

   39 LOCAL_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB INTEGER_NT CSB . SEMICOLON

    SEMICOLON  shift, and go to state 141


State 138

   58 LIST_ELEMENT: LIST_ELEMENT NUMBER SEMICOLON .

    $default  reduce using rule 58 (LIST_ELEMENT)


State 139

   31 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON INCDEC_STATEMENT . CNB STATEMENT

    CNB  shift, and go to state 142


State 140

   32 INCDEC_STATEMENT: IDENTIFIER_NT . INC SEMICOLON
   33                 | IDENTIFIER_NT . DEC SEMICOLON

    INC  shift, and go to state 65
    DEC  shift, and go to state 66


State 141

   39 LOCAL_DECLARATION: LIST_TYPE IDENTIFIER_NT OSB INTEGER_NT CSB SEMICOLON .

    $default  reduce using rule 39 (LOCAL_DECLARATION)


State 142

   31 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON INCDEC_STATEMENT CNB . STATEMENT

    INT         shift, and go to state 1
    STRING      shift, and go to state 2
    CHARACTER   shift, and go to state 3
    FLOAT       shift, and go to state 4
    LIST        shift, and go to state 5
    IDENTIFIER  shift, and go to state 15
    OFB         shift, and go to state 33
    IF          shift, and go to state 36
    WHILE       shift, and go to state 37
    FOR         shift, and go to state 38
    PRINT       shift, and go to state 39
    SCAN        shift, and go to state 40

    LIST_TYPE             go to state 41
    STATEMENT             go to state 143
    PRINT_STATEMENT       go to state 44
    SCAN_STATEMENT        go to state 45
    COMPOUND_STATEMENT    go to state 46
    IF_STATEMENT          go to state 47
    WHILE_STATEMENT       go to state 48
    FOR_STATEMENT         go to state 49
    INCDEC_STATEMENT      go to state 50
    VARIABLE_TYPE         go to state 51
    LOCAL_DECLARATION     go to state 52
    ASSIGNMENT_STATEMENT  go to state 53
    IDENTIFIER_NT         go to state 54


State 143

   31 FOR_STATEMENT: FOR ONB ASSIGNMENT_STATEMENT EXPRESSION SEMICOLON INCDEC_STATEMENT CNB STATEMENT .

    $default  reduce using rule 31 (FOR_STATEMENT)
